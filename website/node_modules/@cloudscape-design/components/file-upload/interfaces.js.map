{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/file-upload/interfaces.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { BaseComponentProps } from '../internal/base-component';\nimport { FormFieldValidationControlProps } from '../internal/context/form-field-context';\nimport { NonCancelableEventHandler } from '../internal/events';\n\nexport interface FileUploadProps extends BaseComponentProps, FormFieldValidationControlProps {\n  /**\n   * Specifies the native file input `accept` attribute to describe the allow-list of file types.\n   */\n  accept?: string;\n  /**\n   * Specifies whether to add aria-required to the file upload control.\n   */\n  ariaRequired?: boolean;\n  /**\n   * Show file size in the token. Use `i18nStrings.formatFileSize` to customize it.\n   */\n  showFileSize?: boolean;\n  /**\n   * Show file last modified timestamp in the token. Use `i18nStrings.formatFileLastModified` to customize it.\n   */\n  showFileLastModified?: boolean;\n  /**\n   * Show file thumbnail in the token. Only supported for images.\n   */\n  showFileThumbnail?: boolean;\n  /**\n   * Specifies the native file input `multiple` attribute to allow users entering more than one file.\n   */\n  multiple?: boolean;\n  /**\n   * Called when the user selects new file(s), or removes a file.\n   * The event `detail` contains the current value of the component.\n   */\n  onChange?: NonCancelableEventHandler<FileUploadProps.ChangeDetail>;\n  /**\n   * Specifies the currently selected file(s).\n   * If you want to clear the selection, use empty array.\n   */\n  value: ReadonlyArray<File>;\n  /**\n   * Specifies the maximum number of displayed file tokens. If the property isn't set, all of the tokens are displayed.\n   */\n  tokenLimit?: number;\n  /**\n   * Constraint text that is displayed below the control. Use this to provide additional information about file size limit, etc.\n   */\n  constraintText?: React.ReactNode;\n  /**\n   * Text that displays as a validation message.\n   */\n  errorText?: React.ReactNode;\n  /**\n   * An array of file errors corresponding to the files in the `value`.\n   */\n  fileErrors?: ReadonlyArray<null | string>;\n  /**\n   * An object containing all the localized strings required by the component:\n   * * `uploadButtonText` (function): A function to render the text of the file upload button. It takes `multiple` attribute to define plurality.\n   * * `dropzoneText` (function): A function to render the text shown in the dropzone. It takes `multiple` attribute to define plurality.\n   * * `removeFileAriaLabel` (function): A function to render the ARIA label for file token remove button.\n   * * `limitShowFewer` (string): The text of the show more tokens button.\n   * * `limitShowMore` (string): The text of the show fewer tokens button.\n   * * `errorIconAriaLabel` (string): The ARIA label to be shown on the error file icon.\n   * * `formatFileSize` (function): (Optional) A function that takes file size in bytes, and produces a formatted string.\n   * * `formatFileLastModified` (function): (Optional) A function that takes the files last modified date, and produces a formatted string.\n   */\n  i18nStrings: FileUploadProps.I18nStrings;\n}\n\nexport namespace FileUploadProps {\n  export interface ChangeDetail {\n    value: File[];\n  }\n\n  export interface DismissDetail {\n    index: number;\n    file: File;\n  }\n\n  export interface I18nStrings {\n    uploadButtonText: (multiple: boolean) => string;\n    dropzoneText: (multiple: boolean) => string;\n    removeFileAriaLabel: (fileIndex: number) => string;\n    limitShowFewer: string;\n    limitShowMore: string;\n    errorIconAriaLabel: string;\n    formatFileSize?: (sizeInBytes: number) => string;\n    formatFileLastModified?: (date: Date) => string;\n  }\n\n  export interface Ref {\n    /**\n     * Sets focus on the file upload button.\n     */\n    focus(): void;\n  }\n}\n\nexport interface FileMetadata {\n  showFileSize?: boolean;\n  showFileLastModified?: boolean;\n  showFileThumbnail?: boolean;\n}\n"]}