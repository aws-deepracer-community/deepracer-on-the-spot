{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/file-upload/file-input/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { ChangeEvent, ForwardedRef, useEffect, useRef, useState } from 'react';\n\nimport InternalButton from '../../button/internal';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../../contexts/form-field';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { FormFieldValidationControlProps } from '../../internal/context/form-field-context';\nimport { joinStrings } from '../../internal/utils/strings';\nimport ScreenreaderOnly from '../../internal/components/screenreader-only';\nimport { FileUploadProps } from '../interfaces';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport clsx from 'clsx';\n\ninterface FileInputProps extends FormFieldValidationControlProps {\n  accept?: string;\n  ariaRequired?: boolean;\n  multiple: boolean;\n  value: readonly File[];\n  onChange: (files: File[]) => void;\n  children: React.ReactNode;\n}\n\nexport default React.forwardRef(FileInput);\n\nfunction FileInput(\n  { accept, ariaRequired, multiple, value, onChange, children, ...restProps }: FileInputProps,\n  ref: ForwardedRef<FileUploadProps.Ref>\n) {\n  const uploadInputRef = useRef<HTMLInputElement>(null);\n  const uploadButtonLabelId = useUniqueId('upload-button-label');\n  const formFieldContext = useFormFieldContext(restProps);\n  const selfControlId = useUniqueId('upload-input');\n  const controlId = formFieldContext.controlId ?? selfControlId;\n\n  useForwardFocus(ref, uploadInputRef);\n\n  const [isFocused, setIsFocused] = useState(false);\n\n  const onUploadButtonClick = () => uploadInputRef.current?.click();\n\n  const onUploadInputFocus = () => setIsFocused(true);\n\n  const onUploadInputBlur = () => setIsFocused(false);\n\n  const onUploadInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    onChange(target.files ? Array.from(target.files) : []);\n  };\n\n  const nativeAttributes: React.HTMLAttributes<HTMLInputElement> = {\n    'aria-labelledby': joinStrings(formFieldContext.ariaLabelledby, uploadButtonLabelId),\n    'aria-describedby': formFieldContext.ariaDescribedby,\n  };\n  if (formFieldContext.invalid) {\n    nativeAttributes['aria-invalid'] = true;\n  }\n  if (ariaRequired) {\n    nativeAttributes['aria-required'] = true;\n  }\n\n  // Synchronizing component's value with the native file input state.\n  useEffect(() => {\n    // The DataTransfer is not available in jsdom.\n    if (window.DataTransfer) {\n      const dataTransfer = new DataTransfer();\n      for (const file of value) {\n        dataTransfer.items.add(file);\n      }\n      uploadInputRef.current!.files = dataTransfer.files;\n    }\n    if (uploadInputRef.current) {\n      uploadInputRef.current.value = ''; // reset value to allow calling onChange when the same file is uploaded again\n    }\n  }, [value]);\n\n  return (\n    <div className={styles['file-input-container']}>\n      {/* This is the actual interactive and accessible file-upload element. */}\n      {/* It is visually hidden to achieve the desired UX design. */}\n      <input\n        id={controlId}\n        ref={uploadInputRef}\n        type=\"file\"\n        hidden={false}\n        multiple={multiple}\n        accept={accept}\n        onChange={onUploadInputChange}\n        onFocus={onUploadInputFocus}\n        onBlur={onUploadInputBlur}\n        className={styles['upload-input']}\n        {...nativeAttributes}\n      />\n\n      {/* The button is decorative. It dispatches clicks to the file input and is ARIA-hidden. */}\n      {/* When the input is focused the focus outline is forced on the button. */}\n      <InternalButton\n        iconName=\"upload\"\n        formAction=\"none\"\n        onClick={onUploadButtonClick}\n        className={clsx(styles['upload-button'], isFocused && styles['force-focus-outline'])}\n        __nativeAttributes={{ tabIndex: -1, 'aria-hidden': true }}\n      >\n        {children}\n      </InternalButton>\n\n      {/* The file input needs to be labelled with provided content. Can't use the button because it is ARIA-hidden. */}\n      <ScreenreaderOnly id={uploadButtonLabelId}>{children}</ScreenreaderOnly>\n    </div>\n  );\n}\n"]}