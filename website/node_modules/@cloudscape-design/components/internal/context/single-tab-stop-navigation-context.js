// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import { createContext, useContext, useEffect, useState } from 'react';
export const defaultValue = {
    navigationActive: false,
    registerFocusable: () => () => { },
};
/**
 * Single tab stop navigation context is used together with keyboard navigation that requires a single tab stop.
 * It instructs interactive elements to override tab indices for just a single one to remain user-focusable.
 */
export const SingleTabStopNavigationContext = createContext(defaultValue);
export function useSingleTabStopNavigation(focusable, options) {
    var _a;
    const { navigationActive: contextNavigationActive, registerFocusable } = useContext(SingleTabStopNavigationContext);
    const [focusTargetActive, setFocusTargetActive] = useState(false);
    const navigationDisabled = (options === null || options === void 0 ? void 0 : options.tabIndex) && (options === null || options === void 0 ? void 0 : options.tabIndex) < 0;
    const navigationActive = contextNavigationActive && !navigationDisabled;
    useEffect(() => {
        if (navigationActive && focusable && focusable.current) {
            const unregister = registerFocusable(focusable.current, isFocusable => setFocusTargetActive(isFocusable));
            return () => unregister();
        }
    });
    let tabIndex = options === null || options === void 0 ? void 0 : options.tabIndex;
    if (navigationActive) {
        tabIndex = !focusTargetActive ? -1 : (_a = options === null || options === void 0 ? void 0 : options.tabIndex) !== null && _a !== void 0 ? _a : 0;
    }
    return { navigationActive, tabIndex };
}
//# sourceMappingURL=single-tab-stop-navigation-context.js.map