{"version":3,"file":"reset-contexts-for-modal.js","sourceRoot":"","sources":["../../../../src/internal/context/reset-contexts-for-modal.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,sBAAsB,EAAE,MAAM,4BAA4B,CAAC;AACpE,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AACjE,OAAO,EAAE,gBAAgB,EAAE,YAAY,IAAI,qBAAqB,EAAE,MAAM,sBAAsB,CAAC;AAC/F,OAAO,EAAE,yBAAyB,EAAE,YAAY,IAAI,gBAAgB,EAAE,MAAM,gCAAgC,CAAC;AAC7G,OAAO,EACL,8BAA8B,EAC9B,YAAY,IAAI,yBAAyB,GAC1C,MAAM,sCAAsC,CAAC;AAE9C;;;GAGG;AACH,MAAM,qBAAqB,GAAG,CAAC,EAAE,QAAQ,EAAiC,EAAE,EAAE,CAAC,CAC7E,oBAAC,gBAAgB,CAAC,QAAQ,IAAC,KAAK,EAAE,qBAAqB;IACrD,oBAAC,aAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE;QAClD,oBAAC,sBAAsB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE;YAC5D,oBAAC,gBAAgB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE;gBAClC,oBAAC,oBAAoB,CAAC,QAAQ,IAAC,KAAK,EAAC,EAAE;oBACrC,oBAAC,yBAAyB,CAAC,QAAQ,IAAC,KAAK,EAAE,gBAAgB;wBACzD,oBAAC,8BAA8B,CAAC,QAAQ,IAAC,KAAK,EAAE,yBAAyB,IACtE,QAAQ,CAC+B,CACP,CACP,CACN,CACI,CACX,CACC,CAC7B,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { FormFieldContext } from './form-field-context';\nimport { ButtonContext } from './button-context';\nimport { CollectionLabelContext } from './collection-label-context';\nimport { InfoLinkLabelContext } from './info-link-label-context';\nimport { AppLayoutContext, defaultValue as appLayoutDefaultValue } from './app-layout-context';\nimport { LinkDefaultVariantContext, defaultValue as linkDefaultValue } from './link-default-variant-context';\nimport {\n  SingleTabStopNavigationContext,\n  defaultValue as singleTabStopDefaultValue,\n} from './single-tab-stop-navigation-context';\n\n/*\n Use this context-resetter when creating a new modal-type context where typically the contents\n of the modal should not be affected by the surrounding components/DOM.\n */\nconst ResetContextsForModal = ({ children }: { children: React.ReactNode }) => (\n  <AppLayoutContext.Provider value={appLayoutDefaultValue}>\n    <ButtonContext.Provider value={{ onClick: () => {} }}>\n      <CollectionLabelContext.Provider value={{ assignId: () => {} }}>\n        <FormFieldContext.Provider value={{}}>\n          <InfoLinkLabelContext.Provider value=\"\">\n            <LinkDefaultVariantContext.Provider value={linkDefaultValue}>\n              <SingleTabStopNavigationContext.Provider value={singleTabStopDefaultValue}>\n                {children}\n              </SingleTabStopNavigationContext.Provider>\n            </LinkDefaultVariantContext.Provider>\n          </InfoLinkLabelContext.Provider>\n        </FormFieldContext.Provider>\n      </CollectionLabelContext.Provider>\n    </ButtonContext.Provider>\n  </AppLayoutContext.Provider>\n);\n\nexport default ResetContextsForModal;\n"]}