{"version":3,"file":"use-height-measure.js","sourceRoot":"","sources":["../../../../../src/internal/hooks/container-queries/use-height-measure.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,iBAAiB,EAAE,MAAM,+CAA+C,CAAC;AAClF,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C;;GAEG;AACH,MAAM,UAAU,gBAAgB,CAC9B,UAAiD,EACjD,IAAI,GAAG,KAAK,EACZ,OAA6B,EAAE;IAE/B,MAAM,CAAC,cAAc,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAChD,uDAAuD;IACvD,MAAM,gBAAgB,GAAG,WAAW,CAAC,UAAU,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAClE,iBAAiB,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;IACxF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC;AAC5C,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { useCallback, useState } from 'react';\n\n/**\n * Conditional resize observer for border box height used in charts.\n */\nexport function useHeightMeasure(\n  getMeasure: () => null | HTMLElement | SVGElement,\n  skip = false,\n  deps: React.DependencyList = []\n) {\n  const [measuredHeight, setHeight] = useState(0);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const stableGetMeasure = useCallback(getMeasure, [...deps, skip]);\n  useResizeObserver(stableGetMeasure, entry => !skip && setHeight(entry.borderBoxHeight));\n  return !skip ? measuredHeight : undefined;\n}\n"]}