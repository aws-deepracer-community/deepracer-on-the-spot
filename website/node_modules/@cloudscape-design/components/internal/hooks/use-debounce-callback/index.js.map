{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/hooks/use-debounce-callback/index.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AAEtC,MAAM,UAAU,mBAAmB,CAAqC,QAAW,EAAE,KAAc;IACjG,MAAM,WAAW,GAAG,MAAM,EAAK,CAAC;IAChC,WAAW,CAAC,OAAO,GAAG,QAAQ,CAAC;IAE/B,uEAAuE;IACvE,uDAAuD;IACvD,OAAO,WAAW,CAChB,QAAQ,CACN,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE;QACX,IAAI,WAAW,CAAC,OAAO,EAAE;YACvB,WAAW,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;SAC9B;IACH,CAAC,CAAM,EACP,KAAK,CACN,EACD,EAAE,CACH,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useRef } from 'react';\nimport debounce from '../../debounce';\n\nexport function useDebounceCallback<T extends (...args: any[]) => void>(callback: T, delay?: number): T {\n  const callbackRef = useRef<T>();\n  callbackRef.current = callback;\n\n  // ESLint rule requires an inline function which we cannot provide here\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(\n    debounce(\n      ((...args) => {\n        if (callbackRef.current) {\n          callbackRef.current(...args);\n        }\n      }) as T,\n      delay\n    ),\n    []\n  );\n}\n"]}