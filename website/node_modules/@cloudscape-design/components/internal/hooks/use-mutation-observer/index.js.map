{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/hooks/use-mutation-observer/index.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAc,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,MAAM,+CAA+C,CAAC;AAE1G,MAAM,oBAAoB,GAAG,sBAAsB,CAAO,OAAO,CAAC,EAAE;IAClE,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IACvD,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IACrE,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;AACrC,CAAC,CAAC,CAAC;AAEH;;;;GAIG;AACH,MAAM,UAAU,mBAAmB,CACjC,UAAwC,EACxC,QAAwC;IAExC,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,EAAE;QACrC,IAAI,UAAU,CAAC,OAAO,EAAE;YACtB,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SAC9B;IACH,CAAC,CAAC,CAAC;IACH,oBAAoB,CAAC,OAAO,CAAC,CAAC;IAE9B,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,EAAE,CAAC;IACZ,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AAChB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\nimport { createSingletonHandler, useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nconst useMutationSingleton = createSingletonHandler<void>(handler => {\n  const observer = new MutationObserver(() => handler());\n  observer.observe(document.body, { attributes: true, subtree: true });\n  return () => observer.disconnect();\n});\n\n/**\n * Fires onChange with the given target element as an argument every time any DOM node attribute changes.\n *\n * @deprecated The hook has performance implications. Consider alternatives.\n */\nexport function useMutationObserver(\n  elementRef: React.RefObject<HTMLElement>,\n  onChange: (element: HTMLElement) => void\n) {\n  const handler = useStableCallback(() => {\n    if (elementRef.current) {\n      onChange(elementRef.current);\n    }\n  });\n  useMutationSingleton(handler);\n\n  useEffect(() => {\n    handler();\n  }, [handler]);\n}\n"]}