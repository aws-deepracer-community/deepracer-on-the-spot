{"version":3,"file":"format-date-localized.js","sourceRoot":"","sources":["../../../../../src/internal/utils/date-time/format-date-localized.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,yBAAyB,EAAE,MAAM,sBAAsB,CAAC;AAEjE,MAAM,CAAC,OAAO,UAAU,mBAAmB,CAAC,EAC1C,IAAI,EAAE,OAAO,EACb,cAAc,EACd,UAAU,EACV,UAAU,EACV,MAAM,GAOP;IACC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;IAE/B,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;QACpD,GAAG,EAAE,SAAS;QACd,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,SAAS;KAChB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAEhB,IAAI,UAAU,EAAE;QACd,OAAO,aAAa,CAAC;KACtB;IAED,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;QACpD,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,KAAK;QAChB,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,SAAS;KAClB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAEhB,MAAM,iBAAiB,GAAG,aAAa,GAAG,oBAAoB,CAAC,MAAM,CAAC,GAAG,aAAa,CAAC;IAEvF,IAAI,cAAc,EAAE;QAClB,OAAO,iBAAiB,CAAC;KAC1B;IAED,MAAM,mBAAmB,GAAG,yBAAyB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IAC3E,OAAO,iBAAiB,GAAG,GAAG,GAAG,mBAAmB,CAAC;AACvD,CAAC;AAED,kFAAkF;AAClF,MAAM,iCAAiC,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AAEnE,SAAS,oBAAoB,CAAC,MAAe;IAC3C,OAAO,MAAM,IAAI,iCAAiC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AACnF,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { formatTimeOffsetLocalized } from './format-time-offset';\n\nexport default function formatDateLocalized({\n  date: isoDate,\n  hideTimeOffset,\n  isDateOnly,\n  timeOffset,\n  locale,\n}: {\n  date: string;\n  hideTimeOffset?: boolean;\n  isDateOnly: boolean;\n  timeOffset?: number;\n  locale?: string;\n}) {\n  const date = new Date(isoDate);\n\n  const formattedDate = new Intl.DateTimeFormat(locale, {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n  }).format(date);\n\n  if (isDateOnly) {\n    return formattedDate;\n  }\n\n  const formattedTime = new Intl.DateTimeFormat(locale, {\n    hour: '2-digit',\n    hourCycle: 'h23',\n    minute: '2-digit',\n    second: '2-digit',\n  }).format(date);\n\n  const formattedDateTime = formattedDate + getDateTimeSeparator(locale) + formattedTime;\n\n  if (hideTimeOffset) {\n    return formattedDateTime;\n  }\n\n  const formattedTimeOffset = formatTimeOffsetLocalized(isoDate, timeOffset);\n  return formattedDateTime + ' ' + formattedTimeOffset;\n}\n\n// Languages in which date and time are separated just with a space, without comma\nconst languagesWithoutDateTimeSeparator = ['ja', 'zh-CN', 'zh-TW'];\n\nfunction getDateTimeSeparator(locale?: string) {\n  return locale && languagesWithoutDateTimeSeparator.includes(locale) ? ' ' : ', ';\n}\n"]}