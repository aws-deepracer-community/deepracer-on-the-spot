{"version":3,"file":"format-date-range.js","sourceRoot":"","sources":["../../../../../src/internal/utils/date-time/format-date-range.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,aAAa,MAAM,mBAAmB,CAAC;AAC9C,OAAO,mBAAmB,MAAM,yBAAyB,CAAC;AAG1D,MAAM,UAAU,eAAe,CAAC,EAC9B,SAAS,EACT,OAAO,EACP,UAAU,EACV,cAAc,EACd,MAAM,EACN,MAAM,GAQP;IACC,MAAM,UAAU,GAAG,aAAa,CAAC,SAAS,CAAC,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;IACtE,OAAO,CACL,UAAU,CAAC;QACT,IAAI,EAAE,SAAS;QACf,MAAM;QACN,cAAc;QACd,UAAU;QACV,UAAU,EAAE,UAAU,CAAC,SAAS;QAChC,MAAM;KACP,CAAC;QACF,KAAK;QACL,UAAU,CAAC;YACT,IAAI,EAAE,OAAO;YACb,MAAM;YACN,cAAc;YACd,UAAU;YACV,UAAU,EAAE,UAAU,CAAC,OAAO;YAC9B,MAAM;SACP,CAAC,CACH,CAAC;AACJ,CAAC;AAED,SAAS,UAAU,CAAC,EAClB,IAAI,EACJ,MAAM,EACN,cAAc,EACd,UAAU,EACV,UAAU,EACV,MAAM,GAQP;IACC,QAAQ,MAAM,EAAE;QACd,KAAK,gBAAgB,CAAC,CAAC;YACrB,OAAO,mBAAmB,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;SACtF;QACD,OAAO,CAAC,CAAC;YACP,OAAO,aAAa,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;SACxE;KACF;AACH,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { isIsoDateOnly } from './is-iso-date-only';\nimport formatDateIso from './format-date-iso';\nimport formatDateLocalized from './format-date-localized';\nimport { DateRangePickerProps } from '../../../date-range-picker/interfaces';\n\nexport function formatDateRange({\n  startDate,\n  endDate,\n  timeOffset,\n  hideTimeOffset,\n  format,\n  locale,\n}: {\n  startDate: string;\n  endDate: string;\n  hideTimeOffset?: boolean;\n  timeOffset: { startDate?: number; endDate?: number };\n  format: DateRangePickerProps.AbsoluteFormat;\n  locale?: string;\n}): string {\n  const isDateOnly = isIsoDateOnly(startDate) && isIsoDateOnly(endDate);\n  return (\n    formatDate({\n      date: startDate,\n      format,\n      hideTimeOffset,\n      isDateOnly,\n      timeOffset: timeOffset.startDate,\n      locale,\n    }) +\n    ' â€” ' +\n    formatDate({\n      date: endDate,\n      format,\n      hideTimeOffset,\n      isDateOnly,\n      timeOffset: timeOffset.endDate,\n      locale,\n    })\n  );\n}\n\nfunction formatDate({\n  date,\n  format,\n  hideTimeOffset,\n  isDateOnly,\n  timeOffset,\n  locale,\n}: {\n  date: string;\n  format: DateRangePickerProps.AbsoluteFormat;\n  hideTimeOffset?: boolean;\n  isDateOnly: boolean;\n  timeOffset?: number;\n  locale?: string;\n}) {\n  switch (format) {\n    case 'long-localized': {\n      return formatDateLocalized({ date, hideTimeOffset, isDateOnly, locale, timeOffset });\n    }\n    default: {\n      return formatDateIso({ date, hideTimeOffset, isDateOnly, timeOffset });\n    }\n  }\n}\n"]}