{"version":3,"file":"format-date.js","sourceRoot":"","sources":["../../../../../src/internal/utils/date-time/format-date.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAGtC,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAE1C;;;;GAIG;AACH,MAAM,UAAU,UAAU,CAAC,KAAW,EAAE,cAAyC,KAAK;IACpF,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IACjC,MAAM,KAAK,GAAG,YAAY,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACzD,IAAI,WAAW,KAAK,OAAO,EAAE;QAC3B,OAAO,GAAG,IAAI,IAAI,KAAK,EAAE,CAAC;KAC3B;IACD,MAAM,IAAI,GAAG,YAAY,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACnD,OAAO,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;AACpC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { CalendarProps } from '../../../calendar/interfaces';\nimport { padLeftZeros } from '../strings';\n\n/**\n * Transforms Date's object date part to a string.\n *\n * We cannot use Date.toISOString because it produces GMT time where the date can be different than local.\n */\nexport function formatDate(value: Date, granularity: CalendarProps.Granularity = 'day'): string {\n  const year = value.getFullYear();\n  const month = padLeftZeros(`${value.getMonth() + 1}`, 2);\n  if (granularity === 'month') {\n    return `${year}-${month}`;\n  }\n  const date = padLeftZeros(`${value.getDate()}`, 2);\n  return `${year}-${month}-${date}`;\n}\n"]}