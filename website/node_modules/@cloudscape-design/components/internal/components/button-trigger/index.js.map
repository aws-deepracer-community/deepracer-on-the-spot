{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/components/button-trigger/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { ButtonHTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport InternalIcon from '../../../icon/internal';\nimport styles from './styles.css.js';\nimport { fireKeyboardEvent, fireCancelableEvent, CancelableEventHandler, BaseKeyDetail } from '../../events';\n\nexport interface ButtonTriggerProps extends BaseComponentProps {\n  children?: React.ReactNode;\n  pressed?: boolean;\n  hideCaret?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  invalid?: boolean;\n  inFilteringToken?: boolean;\n  inlineTokens?: boolean;\n  ariaHasPopup?: 'true' | 'listbox' | 'dialog';\n  ariaControls?: string;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  onKeyDown?: CancelableEventHandler<BaseKeyDetail>;\n  onKeyUp?: CancelableEventHandler<BaseKeyDetail>;\n  onMouseDown?: CancelableEventHandler;\n  onClick?: CancelableEventHandler;\n  onFocus?: CancelableEventHandler;\n  onBlur?: CancelableEventHandler<{ relatedTarget: Node | null }>;\n  autoFocus?: boolean;\n}\n\nconst ButtonTrigger = (\n  {\n    children,\n    pressed = false,\n    hideCaret = false,\n    disabled = false,\n    readOnly = false,\n    invalid = false,\n    inlineTokens,\n    inFilteringToken,\n    ariaHasPopup,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescribedby,\n    ariaControls,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onClick,\n    onFocus,\n    onBlur,\n    autoFocus,\n    ...restProps\n  }: ButtonTriggerProps,\n  ref: React.Ref<HTMLButtonElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n  const attributes: ButtonHTMLAttributes<HTMLButtonElement> = {\n    ...baseProps,\n    type: 'button',\n    className: clsx(\n      styles['button-trigger'],\n      baseProps.className,\n      pressed && styles.pressed,\n      disabled && styles.disabled,\n      invalid && styles.invalid,\n      !hideCaret && styles['has-caret'],\n      readOnly && styles['read-only'],\n      inFilteringToken && styles['in-filtering-token'],\n      inlineTokens && styles['inline-tokens']\n    ),\n    disabled: disabled || readOnly,\n    'aria-expanded': pressed,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-haspopup': ariaHasPopup ?? 'listbox',\n    'aria-controls': ariaControls,\n    onKeyDown: onKeyDown && (event => fireKeyboardEvent(onKeyDown, event)),\n    onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n    onMouseDown: onMouseDown && (event => fireCancelableEvent(onMouseDown, {}, event)),\n    onClick: onClick && (event => fireCancelableEvent(onClick, {}, event)),\n    onFocus: onFocus && (event => fireCancelableEvent(onFocus, {}, event)),\n    onBlur: onBlur && (event => fireCancelableEvent(onBlur, { relatedTarget: event.relatedTarget }, event)),\n    autoFocus,\n  };\n\n  if (invalid) {\n    attributes['aria-invalid'] = invalid;\n  }\n\n  return (\n    <button ref={ref} {...attributes}>\n      {children}\n      {!hideCaret && (\n        <span className={styles.arrow}>\n          <InternalIcon name=\"caret-down-filled\" variant={disabled ? 'disabled' : 'normal'} />\n        </span>\n      )}\n    </button>\n  );\n};\n\nexport namespace ButtonTriggerProps {\n  export interface Ref {\n    focus(): void;\n  }\n}\n\nexport default React.forwardRef(ButtonTrigger);\n"]}