{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/components/chart-status-container/index.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAGvC,OAAO,EAAE,sBAAsB,EAA6B,MAAM,cAAc,CAAC;AACjF,OAAO,uBAAuB,MAAM,oCAAoC,CAAC;AACzE,OAAO,YAAY,MAAM,wBAAwB,CAAC;AAElD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAoBxD,MAAM,UAAU,cAAc,CAAO,EACnC,YAAY,EACZ,WAAW,EACX,UAAU,GAKX;IACC,MAAM,OAAO,GAAG,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC;IACzD,MAAM,SAAS,GAAG,OAAO,IAAI,WAAW,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,CAAC;IACxE,MAAM,SAAS,GAAG,UAAU,KAAK,UAAU,IAAI,CAAC,OAAO,CAAC;IACxD,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;AAC3C,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,oBAAoB,CAAC,EAC3C,UAAU,EACV,SAAS,EACT,WAAW,EACX,YAAY,EACZ,OAAO,EACP,KAAK,EACL,eAAe,EACf,SAAS,EACT,OAAO,EACP,SAAS,GACiB;IAC1B,MAAM,IAAI,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC;IAEzC,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,EAAE;QACnC,MAAM,mBAAmB,GAAG,CAAC,KAAkB,EAAE,EAAE;YACjD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,sBAAsB,CAAC,eAAe,CAAC,CAAC;QAC1C,CAAC,CAAC;QACF,IAAI,UAAU,KAAK,OAAO,EAAE;YAC1B,MAAM,oBAAoB,GAAG,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;YAChE,OAAO,CACL;gBACE,oBAAC,uBAAuB,IAAC,IAAI,EAAC,OAAO,IAAE,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAA2B;gBAAC,GAAG;gBACjG,CAAC,CAAC,oBAAoB,IAAI,CAAC,CAAC,eAAe,IAAI,CAC9C,oBAAC,YAAY,IAAC,QAAQ,EAAE,mBAAmB,EAAE,OAAO,EAAC,UAAU,IAC5D,oBAAoB,CACR,CAChB,CACI,CACR,CAAC;SACH;QAED,IAAI,UAAU,KAAK,SAAS,EAAE;YAC5B,OAAO,oBAAC,uBAAuB,IAAC,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,aAAa,EAAE,WAAW,CAAC,CAA2B,CAAC;SAC7G;QAED,IAAI,SAAS,EAAE;YACb,OAAO,6BAAK,SAAS,EAAE,MAAM,CAAC,KAAK,IAAG,OAAO,CAAO,CAAC;SACtD;QAED,IAAI,OAAO,EAAE;YACX,OAAO,6BAAK,SAAS,EAAE,MAAM,CAAC,KAAK,IAAG,KAAK,CAAO,CAAC;SACpD;IACH,CAAC,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,eAAe,EAAE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;IAElH,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,IAAI,eAAY,QAAQ,iBAAa,MAAM,IAC/D,CAAC,SAAS,IAAI,eAAe,CAC1B,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\n\nimport { BaseComponentProps } from '../../base-component';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../../events';\nimport InternalStatusIndicator from '../../../status-indicator/internal';\nimport InternalLink from '../../../link/internal';\n\nimport styles from './styles.css.js';\nimport { useInternalI18n } from '../../../i18n/context';\n\ninterface ChartStatusContainerProps extends BaseComponentProps {\n  statusType: 'loading' | 'finished' | 'error';\n\n  empty?: React.ReactNode;\n  noMatch?: React.ReactNode;\n\n  loadingText?: string;\n  errorText?: string;\n  recoveryText?: string;\n\n  onRecoveryClick?: NonCancelableEventHandler;\n\n  // From `getChartStatus`\n  isEmpty?: boolean;\n  isNoMatch?: boolean;\n  showChart?: boolean;\n}\n\nexport function getChartStatus<T, U>({\n  externalData,\n  visibleData,\n  statusType,\n}: {\n  externalData: ReadonlyArray<T>;\n  visibleData: ReadonlyArray<U>;\n  statusType: 'loading' | 'finished' | 'error';\n}) {\n  const isEmpty = !visibleData || visibleData.length === 0;\n  const isNoMatch = isEmpty && visibleData.length !== externalData.length;\n  const showChart = statusType === 'finished' && !isEmpty;\n  return { isEmpty, isNoMatch, showChart };\n}\n\nexport default function ChartStatusContainer({\n  statusType,\n  errorText,\n  loadingText,\n  recoveryText,\n  noMatch,\n  empty,\n  onRecoveryClick,\n  isNoMatch,\n  isEmpty,\n  showChart,\n}: ChartStatusContainerProps) {\n  const i18n = useInternalI18n('[charts]');\n\n  const statusContainer = useMemo(() => {\n    const handleRecoveryClick = (event: CustomEvent) => {\n      event.preventDefault();\n      fireNonCancelableEvent(onRecoveryClick);\n    };\n    if (statusType === 'error') {\n      const renderedRecoveryText = i18n('recoveryText', recoveryText);\n      return (\n        <span>\n          <InternalStatusIndicator type=\"error\">{i18n('errorText', errorText)}</InternalStatusIndicator>{' '}\n          {!!renderedRecoveryText && !!onRecoveryClick && (\n            <InternalLink onFollow={handleRecoveryClick} variant=\"recovery\">\n              {renderedRecoveryText}\n            </InternalLink>\n          )}\n        </span>\n      );\n    }\n\n    if (statusType === 'loading') {\n      return <InternalStatusIndicator type=\"loading\">{i18n('loadingText', loadingText)}</InternalStatusIndicator>;\n    }\n\n    if (isNoMatch) {\n      return <div className={styles.empty}>{noMatch}</div>;\n    }\n\n    if (isEmpty) {\n      return <div className={styles.empty}>{empty}</div>;\n    }\n  }, [i18n, statusType, onRecoveryClick, isEmpty, isNoMatch, recoveryText, loadingText, errorText, empty, noMatch]);\n\n  return (\n    <div className={styles.root} aria-live=\"polite\" aria-atomic=\"true\">\n      {!showChart && statusContainer}\n    </div>\n  );\n}\n"]}