{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/components/menu-dropdown/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { MenuDropdownProps, ButtonTriggerProps } from './interfaces';\nimport { getBaseProps } from '../../base-component';\nimport { applyDisplayName } from '../../utils/apply-display-name';\nimport InternalButtonDropdown from '../../../button-dropdown/internal';\nimport InternalIcon from '../../../icon/internal';\nimport buttonDropdownStyles from '../../../button-dropdown/styles.css.js';\nimport styles from './styles.css.js';\nimport { CustomTriggerProps } from '../../../button-dropdown/interfaces';\n\nexport { MenuDropdownProps };\n\nexport const ButtonTrigger = React.forwardRef(\n  (\n    {\n      testUtilsClass,\n      iconName,\n      iconUrl,\n      iconAlt,\n      iconSvg,\n      badge,\n      ariaLabel,\n      offsetRight,\n      disabled,\n      expanded,\n      children,\n      onClick,\n    }: ButtonTriggerProps,\n    ref: React.Ref<any>\n  ) => {\n    const hasIcon = iconName || iconUrl || iconSvg;\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        className={clsx(styles.button, styles[`offset-right-${offsetRight}`], testUtilsClass, {\n          [styles.expanded]: expanded,\n        })}\n        aria-label={ariaLabel}\n        aria-expanded={!!expanded}\n        aria-haspopup={true}\n        disabled={disabled}\n        onClick={event => {\n          event.preventDefault();\n          onClick && onClick();\n        }}\n      >\n        {hasIcon && (\n          <InternalIcon\n            className={styles.icon}\n            name={iconName}\n            url={iconUrl}\n            alt={iconAlt}\n            svg={iconSvg}\n            badge={badge}\n          />\n        )}\n        {children && <span className={styles.text}>{children}</span>}\n        {children && (\n          <InternalIcon\n            name=\"caret-down-filled\"\n            className={expanded ? buttonDropdownStyles['rotate-up'] : buttonDropdownStyles['rotate-down']}\n          />\n        )}\n      </button>\n    );\n  }\n);\n\nconst MenuDropdown = ({\n  iconName,\n  iconUrl,\n  iconAlt,\n  iconSvg,\n  badge,\n  offsetRight,\n  children,\n  ...props\n}: MenuDropdownProps) => {\n  const baseProps = getBaseProps(props);\n\n  const dropdownTrigger = ({\n    triggerRef,\n    ariaLabel,\n    isOpen,\n    testUtilsClass,\n    disabled,\n    onClick,\n  }: CustomTriggerProps) => {\n    return (\n      <ButtonTrigger\n        testUtilsClass={testUtilsClass}\n        ref={triggerRef}\n        disabled={disabled}\n        expanded={isOpen}\n        iconName={iconName}\n        iconUrl={iconUrl}\n        iconAlt={iconAlt}\n        iconSvg={iconSvg}\n        badge={badge}\n        ariaLabel={ariaLabel}\n        offsetRight={offsetRight}\n        onClick={onClick}\n      >\n        {children}\n      </ButtonTrigger>\n    );\n  };\n\n  return (\n    <InternalButtonDropdown\n      {...baseProps}\n      {...props}\n      variant=\"navigation\"\n      customTriggerBuilder={dropdownTrigger}\n      preferCenter={true}\n    />\n  );\n};\n\napplyDisplayName(MenuDropdown, 'MenuDropdown');\nexport default MenuDropdown;\n"]}