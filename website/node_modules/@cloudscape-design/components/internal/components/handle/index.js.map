{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/components/handle/index.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,KAAyB,MAAM,OAAO,CAAC;AAC9C,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAErC,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,KAAqC;IAClE,4DAA4D;IAC5D,oDAAoD;IACpD,sDAAsD;IACtD,4EAA4E;IAC5E,4BAA4B;IAE5B,OAAO,CACL,2CACE,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,CAAC,IACP,KAAK,IACT,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,IAC/C,CACH,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { HTMLAttributes } from 'react';\nimport styles from './styles.css.js';\n\nexport default function Handle(props: HTMLAttributes<HTMLDivElement>) {\n  // We need to use a div with button role instead of a button\n  // so that Safari will focus on it when clicking it.\n  // (See https://bugs.webkit.org/show_bug.cgi?id=22261)\n  // Otherwise, we can't reliably catch keyboard events coming from the handle\n  // when it is being dragged.\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      {...props}\n      onPointerDown={props.onPointerDown}\n      className={clsx(styles.handle, props.className)}\n    />\n  );\n}\n"]}