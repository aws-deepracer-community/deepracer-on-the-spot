{"version":3,"file":"chart-container.js","sourceRoot":"","sources":["../../../../../src/internal/components/cartesian-chart/chart-container.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,IAAI,MAAM,MAAM,CAAC;AAYxB,MAAM,2BAA2B,GAAG,EAAE,CAAC;AAEvC,MAAM,CAAC,MAAM,uBAAuB,GAAG,UAAU,CAC/C,CACE,EACE,SAAS,EACT,SAAS,EACT,aAAa,EACb,oBAAoB,EACpB,eAAe,EACf,SAAS,EACT,OAAO,GACsB,EAC/B,GAA8B,EAC9B,EAAE;IACF,IAAI,SAAS,EAAE;QACb,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG;YAC5E,aAAa;YAEd,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;gBACxE,oBAAoB;gBAErB,6BAAK,SAAS,EAAE,MAAM,CAAC,uBAAuB,CAAC;oBAC7C,6BACE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,8BAA8B,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,EAC7E,KAAK,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,2BAA2B,CAAC,EAAE;wBAEtE,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,IAAG,SAAS,CAAO,CACzF;oBAEN,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,+BAA+B,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,IAChF,eAAe,CACZ,CACF;gBAEL,OAAO,CACJ,CACF,CACP,CAAC;KACH;IAED,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,iBAAiB,CAAC,EAAE,GAAG,EAAE,GAAG;QAChD,aAAa;QAEd,6BAAK,SAAS,EAAE,MAAM,CAAC,uBAAuB,CAAC;YAC5C,oBAAoB;YAErB,6BAAK,SAAS,EAAE,MAAM,CAAC,uBAAuB,CAAC;gBAC5C,SAAS;gBACT,eAAe,CACZ;YAEL,OAAO,CACJ,CACF,CACP,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { forwardRef } from 'react';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\n\ninterface CartesianChartContainerProps {\n  minHeight: number;\n  fitHeight: boolean;\n  leftAxisLabel: React.ReactNode;\n  leftAxisLabelMeasure: React.ReactNode;\n  bottomAxisLabel: React.ReactNode;\n  chartPlot: React.ReactNode;\n  popover: React.ReactNode;\n}\n\nconst CONTENT_MIN_HEIGHT_BOUNDARY = 40;\n\nexport const CartesianChartContainer = forwardRef(\n  (\n    {\n      minHeight,\n      fitHeight,\n      leftAxisLabel,\n      leftAxisLabelMeasure,\n      bottomAxisLabel,\n      chartPlot,\n      popover,\n    }: CartesianChartContainerProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    if (fitHeight) {\n      return (\n        <div className={clsx(styles['chart-container'], styles['fit-height'])} ref={ref}>\n          {leftAxisLabel}\n\n          <div className={clsx(styles['chart-container-outer'], styles['fit-height'])}>\n            {leftAxisLabelMeasure}\n\n            <div className={styles['chart-container-inner']}>\n              <div\n                className={clsx(styles['chart-container-plot-wrapper'], styles['fit-height'])}\n                style={{ minHeight: Math.max(minHeight, CONTENT_MIN_HEIGHT_BOUNDARY) }}\n              >\n                <div className={clsx(styles['chart-container-plot'], styles['fit-height'])}>{chartPlot}</div>\n              </div>\n\n              <div className={clsx(styles['chart-container-bottom-labels'], styles['fit-height'])}>\n                {bottomAxisLabel}\n              </div>\n            </div>\n\n            {popover}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles['chart-container']} ref={ref}>\n        {leftAxisLabel}\n\n        <div className={styles['chart-container-outer']}>\n          {leftAxisLabelMeasure}\n\n          <div className={styles['chart-container-inner']}>\n            {chartPlot}\n            {bottomAxisLabel}\n          </div>\n\n          {popover}\n        </div>\n      </div>\n    );\n  }\n);\n"]}