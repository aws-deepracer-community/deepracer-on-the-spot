{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/components/chart-series-details/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, memo, ReactNode, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport ChartSeriesMarker, { ChartSeriesMarkerType } from '../chart-series-marker';\nimport styles from './styles.css.js';\nimport InternalExpandableSection from '../../../expandable-section/internal';\nimport getSeriesDetailsText from './series-details-text';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\n\ninterface ChartDetailPair {\n  key: ReactNode;\n  value: ReactNode;\n}\n\ninterface ListItemProps {\n  itemKey: ReactNode;\n  value: ReactNode;\n  subItems?: ReadonlyArray<ChartDetailPair>;\n  markerType?: ChartSeriesMarkerType;\n  color?: string;\n}\n\nexport interface ChartSeriesDetailItem extends ChartDetailPair {\n  markerType?: ChartSeriesMarkerType;\n  color?: string;\n  isDimmed?: boolean;\n  subItems?: ReadonlyArray<ChartDetailPair>;\n  expandableId?: string;\n}\nexport type ExpandedSeries = Set<string>;\n\nexport interface ChartSeriesDetailsProps extends BaseComponentProps {\n  details: ReadonlyArray<ChartSeriesDetailItem>;\n  expandedSeries?: ExpandedSeries;\n  setPopoverText?: (s: string) => void;\n  setExpandedState?: (seriesTitle: string, state: boolean) => void;\n  compactList?: boolean;\n}\n\nexport default memo(forwardRef(ChartSeriesDetails));\n\nfunction ChartSeriesDetails(\n  { details, expandedSeries, setPopoverText, setExpandedState, compactList, ...restProps }: ChartSeriesDetailsProps,\n  ref: React.Ref<HTMLDivElement>\n) {\n  const baseProps = getBaseProps(restProps);\n  const className = clsx(baseProps.className, styles.root);\n  const detailsRef = useRef<HTMLDivElement | null>(null);\n  const mergedRef = useMergeRefs(ref, detailsRef);\n\n  // Once the component has rendered, pass its content in plain text\n  // so that it can be used by screen readers.\n  useEffect(() => {\n    if (setPopoverText) {\n      if (detailsRef.current) {\n        setPopoverText(getSeriesDetailsText(detailsRef.current));\n      }\n      return () => {\n        setPopoverText('');\n      };\n    }\n  }, [details, setPopoverText]);\n\n  const isExpanded = (seriesTitle: string) => !!expandedSeries && expandedSeries.has(seriesTitle);\n\n  return (\n    <div {...baseProps} className={className} ref={mergedRef}>\n      <ul className={clsx(styles.list, compactList && styles.compact)}>\n        {details.map(({ key, value, markerType, color, isDimmed, subItems, expandableId }, index) => (\n          <li\n            key={index}\n            className={clsx({\n              [styles.dimmed]: isDimmed,\n              [styles['list-item']]: true,\n              [styles['with-sub-items']]: subItems?.length,\n              [styles.expandable]: !!expandableId,\n            })}\n          >\n            {subItems?.length && !!expandableId ? (\n              <ExpandableSeries\n                itemKey={key}\n                value={value}\n                markerType={markerType}\n                color={color}\n                subItems={subItems}\n                expanded={isExpanded(expandableId)}\n                setExpandedState={state => setExpandedState && setExpandedState(expandableId, state)}\n              />\n            ) : (\n              <NonExpandableSeries\n                itemKey={key}\n                value={value}\n                markerType={markerType}\n                color={color}\n                subItems={subItems}\n              />\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction SubItems({\n  items,\n  expandable,\n  expanded,\n}: {\n  items: ReadonlyArray<ChartDetailPair>;\n  expandable?: boolean;\n  expanded?: boolean;\n}) {\n  return (\n    <ul className={clsx(styles['sub-items'], expandable && styles.expandable)}>\n      {items.map(({ key, value }, index) => (\n        <li\n          key={index}\n          className={clsx(\n            styles['inner-list-item'],\n            styles['key-value-pair'],\n            (expanded || !expandable) && styles.announced\n          )}\n        >\n          <span className={styles.key}>{key}</span>\n          <span className={styles.value}>{value}</span>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction ExpandableSeries({\n  itemKey,\n  value,\n  subItems,\n  markerType,\n  color,\n  expanded,\n  setExpandedState,\n}: ListItemProps &\n  Required<Pick<ListItemProps, 'subItems'>> & {\n    expanded: boolean;\n    setExpandedState: (state: boolean) => void;\n  }) {\n  return (\n    <div className={styles['expandable-section']}>\n      {markerType && color && <ChartSeriesMarker type={markerType} color={color} />}\n      <div className={styles['full-width']}>\n        <InternalExpandableSection\n          variant=\"compact\"\n          headerText={itemKey}\n          headerActions={<span className={clsx(styles.value, styles.expandable)}>{value}</span>}\n          expanded={expanded}\n          onChange={({ detail }) => setExpandedState(detail.expanded)}\n        >\n          <SubItems items={subItems} expandable={true} expanded={expanded} />\n        </InternalExpandableSection>\n      </div>\n    </div>\n  );\n}\n\nfunction NonExpandableSeries({ itemKey, value, subItems, markerType, color }: ListItemProps) {\n  return (\n    <>\n      <div className={clsx(styles['key-value-pair'], styles.announced)}>\n        <div className={styles.key}>\n          {markerType && color && <ChartSeriesMarker type={markerType} color={color} />}\n          <span>{itemKey}</span>\n        </div>\n        <span className={styles.value}>{value}</span>\n      </div>\n      {subItems && <SubItems items={subItems} />}\n    </>\n  );\n}\n"]}