{"version":3,"file":"drawers.js","sourceRoot":"","sources":["../../../../../src/internal/plugins/controllers/drawers.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AAmCtC,MAAM,OAAO,iBAAiB;IAA9B;QACU,YAAO,GAAwB,EAAE,CAAC;QAClC,gCAA2B,GAAuC,IAAI,CAAC;QAE/E,mBAAc,GAAG,QAAQ,CAAC,GAAG,EAAE;;YAC7B,MAAA,IAAI,CAAC,2BAA2B,qDAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,mBAAc,GAAG,CAAC,MAAoB,EAAE,EAAE;YACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,wBAAmB,GAAG,CAAC,QAAqC,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,2BAA2B,KAAK,IAAI,EAAE;gBAC7C,OAAO,CAAC,IAAI,CAAC,kEAAkE,CAAC,CAAC;aAClF;YACD,IAAI,CAAC,2BAA2B,GAAG,QAAQ,CAAC;YAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,OAAO,GAAG,EAAE;gBACV,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;YAC1C,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,2BAAsB,GAAG,GAAG,EAAE;YAC5B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC,CAAC;IAYJ,CAAC;IAVC,aAAa,CAAC,MAAiC,EAAE;;QAC/C,MAAA,GAAG,CAAC,cAAc,oCAAlB,GAAG,CAAC,cAAc,GAAK,IAAI,CAAC,cAAc,EAAC;QAC3C,OAAO,GAAuB,CAAC;IACjC,CAAC;IAED,eAAe,CAAC,cAA2C,EAAE;;QAC3D,MAAA,WAAW,CAAC,sBAAsB,oCAAlC,WAAW,CAAC,sBAAsB,GAAK,IAAI,CAAC,sBAAsB,EAAC;QACnE,MAAA,WAAW,CAAC,mBAAmB,oCAA/B,WAAW,CAAC,mBAAmB,GAAK,IAAI,CAAC,mBAAmB,EAAC;QAC7D,OAAO,WAAiC,CAAC;IAC3C,CAAC;CACF","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\nimport { NonCancelableEventHandler } from '../../events';\n\nexport interface DrawerConfig {\n  id: string;\n  ariaLabels: {\n    content?: string;\n    closeButton?: string;\n    triggerButton?: string;\n    resizeHandle?: string;\n  };\n  badge?: boolean;\n  resizable?: boolean;\n  defaultSize?: number;\n  onResize?: NonCancelableEventHandler<{ size: number; id: string }>;\n  orderPriority?: number;\n  defaultActive?: boolean;\n  trigger: {\n    iconSvg: string;\n  };\n  mountContent: (container: HTMLElement) => void;\n  unmountContent: (container: HTMLElement) => void;\n}\n\nexport type DrawersRegistrationListener = (drawers: Array<DrawerConfig>) => void;\n\nexport interface DrawersApiPublic {\n  registerDrawer(config: DrawerConfig): void;\n}\n\nexport interface DrawersApiInternal {\n  clearRegisteredDrawers(): void;\n  onDrawersRegistered(listener: DrawersRegistrationListener): () => void;\n}\n\nexport class DrawersController {\n  private drawers: Array<DrawerConfig> = [];\n  private drawersRegistrationListener: DrawersRegistrationListener | null = null;\n\n  scheduleUpdate = debounce(() => {\n    this.drawersRegistrationListener?.(this.drawers);\n  }, 0);\n\n  registerDrawer = (config: DrawerConfig) => {\n    this.drawers = this.drawers.concat(config);\n    this.scheduleUpdate();\n  };\n\n  onDrawersRegistered = (listener: DrawersRegistrationListener) => {\n    if (this.drawersRegistrationListener !== null) {\n      console.warn('[AwsUi] [runtime drawers] multiple app layout instances detected');\n    }\n    this.drawersRegistrationListener = listener;\n    this.scheduleUpdate();\n    return () => {\n      this.drawersRegistrationListener = null;\n    };\n  };\n\n  clearRegisteredDrawers = () => {\n    this.drawers = [];\n  };\n\n  installPublic(api: Partial<DrawersApiPublic> = {}): DrawersApiPublic {\n    api.registerDrawer ??= this.registerDrawer;\n    return api as DrawersApiPublic;\n  }\n\n  installInternal(internalApi: Partial<DrawersApiInternal> = {}): DrawersApiInternal {\n    internalApi.clearRegisteredDrawers ??= this.clearRegisteredDrawers;\n    internalApi.onDrawersRegistered ??= this.onDrawersRegistered;\n    return internalApi as DrawersApiInternal;\n  }\n}\n"]}