{"version":3,"file":"action-buttons.js","sourceRoot":"","sources":["../../../../../src/internal/plugins/controllers/action-buttons.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AACtC,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AA+BlD,MAAM,OAAO,uBAAuB;IAApC;QACU,cAAS,GAAsC,EAAE,CAAC;QAClD,YAAO,GAAwB,EAAE,CAAC;QAElC,mBAAc,GAAG,QAAQ,CAAC,GAAG,EAAE;YACrC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7D,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,mBAAc,GAAG,CAAC,MAAoB,EAAE,EAAE;YACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,2BAAsB,GAAG,GAAG,EAAE;YAC5B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC,CAAC;QAEF,uBAAkB,GAAG,CAAC,QAAoC,EAAE,EAAE;YAC5D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,OAAO,GAAG,EAAE;gBACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;YACpE,CAAC,CAAC;QACJ,CAAC,CAAC;IAYJ,CAAC;IAVC,aAAa,CAAC,MAAiC,EAAE;;QAC/C,MAAA,GAAG,CAAC,cAAc,oCAAlB,GAAG,CAAC,cAAc,GAAK,IAAI,CAAC,cAAc,EAAC;QAC3C,OAAO,GAAuB,CAAC;IACjC,CAAC;IAED,eAAe,CAAC,cAA2C,EAAE;;QAC3D,MAAA,WAAW,CAAC,sBAAsB,oCAAlC,WAAW,CAAC,sBAAsB,GAAK,IAAI,CAAC,sBAAsB,EAAC;QACnE,MAAA,WAAW,CAAC,kBAAkB,oCAA9B,WAAW,CAAC,kBAAkB,GAAK,IAAI,CAAC,kBAAkB,EAAC;QAC3D,OAAO,WAAiC,CAAC;IAC3C,CAAC;CACF","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\nimport { sortByPriority } from '../helpers/utils';\n\n// this code should not depend on React typings, because it is portable between major versions\ninterface RefShim<T> {\n  current: T | null;\n}\n\nexport interface ActionContext {\n  type: string;\n  headerRef: RefShim<HTMLElement>;\n  contentRef: RefShim<HTMLElement>;\n}\n\nexport interface ActionConfig {\n  id: string;\n  orderPriority?: number;\n  mountContent: (container: HTMLElement, context: ActionContext) => void;\n  unmountContent: (container: HTMLElement) => void;\n}\n\nexport type ActionRegistrationListener = (action: Array<ActionConfig>) => void;\n\nexport interface ActionsApiPublic {\n  registerAction(config: ActionConfig): void;\n}\n\nexport interface ActionsApiInternal {\n  clearRegisteredActions(): void;\n  onActionRegistered(listener: ActionRegistrationListener): () => void;\n}\n\nexport class ActionButtonsController {\n  private listeners: Array<ActionRegistrationListener> = [];\n  private actions: Array<ActionConfig> = [];\n\n  private scheduleUpdate = debounce(() => {\n    this.listeners.forEach(listener => listener(this.actions));\n  }, 0);\n\n  registerAction = (action: ActionConfig) => {\n    this.actions.push(action);\n    this.actions = sortByPriority(this.actions);\n    this.scheduleUpdate();\n  };\n\n  clearRegisteredActions = () => {\n    this.actions = [];\n  };\n\n  onActionRegistered = (listener: ActionRegistrationListener) => {\n    this.listeners.push(listener);\n    this.scheduleUpdate();\n    return () => {\n      this.listeners = this.listeners.filter(item => item !== listener);\n    };\n  };\n\n  installPublic(api: Partial<ActionsApiPublic> = {}): ActionsApiPublic {\n    api.registerAction ??= this.registerAction;\n    return api as ActionsApiPublic;\n  }\n\n  installInternal(internalApi: Partial<ActionsApiInternal> = {}): ActionsApiInternal {\n    internalApi.clearRegisteredActions ??= this.clearRegisteredActions;\n    internalApi.onActionRegistered ??= this.onActionRegistered;\n    return internalApi as ActionsApiInternal;\n  }\n}\n"]}