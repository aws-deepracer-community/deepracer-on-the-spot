{"version":3,"file":"analytics.js","sourceRoot":"","sources":["../../../src/wizard/analytics.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AAGtD,MAAM,UAAU,oBAAoB,CAAC,mBAAuC,EAAE,KAA2B;IACvG,MAAM,oBAAoB,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAE3C,SAAS,CAAC,GAAG,EAAE;QACb,kEAAkE;QAClE,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,oBAAoB,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1E,OAAO,GAAG,EAAE;YACV,YAAY,CAAC,MAAM,CAAC,CAAC;YACrB,oBAAoB,CAAC,OAAO,GAAG,KAAK,CAAC;QACvC,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAE1B,MAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IACxD,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,mBAAmB,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE;YACzD,OAAO;SACR;QAED,aAAa,CAAC,YAAY,CAAC;YACzB,mBAAmB;YACnB,iBAAiB,EAAE,oBAAoB,CAAC,KAAK,CAAC;SAC/C,CAAC,CAAC;QAEH,gGAAgG;QAChG,yCAAyC;QACzC,EAAE;QACF,uDAAuD;IACzD,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC,CAAC;AACxC,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,KAA2B;IAC9D,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;;QAAC,OAAA,CAAC;YACjC,IAAI,EAAE,IAAI,CAAC,KAAK;YAChB,MAAM,EAAE,KAAK,GAAG,CAAC;YACjB,UAAU,EAAE,MAAA,IAAI,CAAC,UAAU,mCAAI,KAAK;SACrC,CAAC,CAAA;KAAA,CAAC,CAAC;AACN,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef, useEffect } from 'react';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { WizardProps } from './interfaces';\n\nexport function useFunnelChangeEvent(funnelInteractionId: string | undefined, steps: WizardProps['steps']) {\n  const listenForStepChanges = useRef(false);\n\n  useEffect(() => {\n    // We prevent emitting the event before the funnel has stabilised.\n    const handle = setTimeout(() => (listenForStepChanges.current = true), 0);\n\n    return () => {\n      clearTimeout(handle);\n      listenForStepChanges.current = false;\n    };\n  }, [funnelInteractionId]);\n\n  const stepTitles = steps.map(step => step.title).join();\n  useEffect(() => {\n    if (!funnelInteractionId || !listenForStepChanges.current) {\n      return;\n    }\n\n    FunnelMetrics.funnelChange({\n      funnelInteractionId,\n      stepConfiguration: getStepConfiguration(steps),\n    });\n\n    // This dependency array does not include `steps`, because `steps` is not stable across renders.\n    // We use `stepTitles` as a stable proxy.\n    //\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [funnelInteractionId, stepTitles]);\n}\n\nexport function getStepConfiguration(steps: WizardProps['steps']) {\n  return steps.map((step, index) => ({\n    name: step.title,\n    number: index + 1,\n    isOptional: step.isOptional ?? false,\n  }));\n}\n"]}