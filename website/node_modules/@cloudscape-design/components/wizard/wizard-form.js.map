{"version":3,"file":"wizard-form.js","sourceRoot":"","sources":["../../../src/wizard/wizard-form.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useComponentMetadata } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalForm from '../form/internal';\nimport InternalHeader from '../header/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport WizardActions from './wizard-actions';\nimport { WizardProps } from './interfaces';\nimport WizardFormHeader from './wizard-form-header';\nimport { useEffectOnUpdate } from '../internal/hooks/use-effect-on-update';\nimport { AnalyticsFunnelStep } from '../internal/analytics/components/analytics-funnel';\nimport { DATA_ATTR_FUNNEL_KEY, FUNNEL_KEY_STEP_NAME } from '../internal/analytics/selectors';\nimport { PACKAGE_VERSION } from '../internal/environment';\nimport { BasePropsWithAnalyticsMetadata, getAnalyticsMetadataProps } from '../internal/base-component';\n\nimport styles from './styles.css.js';\n\ninterface WizardFormProps {\n  steps: ReadonlyArray<WizardProps.Step>;\n  activeStepIndex: number;\n  isVisualRefresh: boolean;\n  showCollapsedSteps: boolean;\n  i18nStrings: WizardProps.I18nStrings;\n  submitButtonText?: string;\n  isPrimaryLoading: boolean;\n  allowSkipTo: boolean;\n  secondaryActions?: React.ReactNode;\n  onCancelClick: () => void;\n  onPreviousClick: () => void;\n  onPrimaryClick: () => void;\n  onSkipToClick: (stepIndex: number) => void;\n}\n\nexport const STEP_NAME_SELECTOR = `[${DATA_ATTR_FUNNEL_KEY}=${FUNNEL_KEY_STEP_NAME}]`;\n\nexport default function WizardForm({\n  steps,\n  activeStepIndex,\n  isVisualRefresh,\n  showCollapsedSteps,\n  i18nStrings,\n  submitButtonText,\n  isPrimaryLoading,\n  allowSkipTo,\n  secondaryActions,\n  onCancelClick,\n  onPreviousClick,\n  onPrimaryClick,\n  onSkipToClick,\n}: WizardFormProps) {\n  const { title, info, description, content, errorText, isOptional, ...rest } = steps[activeStepIndex] || {};\n  const isLastStep = activeStepIndex >= steps.length - 1;\n  const skipToTargetIndex = findSkipToTargetIndex(steps, activeStepIndex);\n  const isMobile = useMobile();\n  const stepHeaderRef = useRef<HTMLDivElement | null>(null);\n  const analyticsMetadata = getAnalyticsMetadataProps(rest as BasePropsWithAnalyticsMetadata);\n  const elementRef = useComponentMetadata('WizardForm', PACKAGE_VERSION, { ...analyticsMetadata });\n\n  useEffectOnUpdate(() => {\n    if (stepHeaderRef && stepHeaderRef.current) {\n      stepHeaderRef.current?.focus();\n    }\n  }, [activeStepIndex]);\n\n  const showSkipTo = allowSkipTo && skipToTargetIndex !== -1;\n  const skipToButtonText =\n    skipToTargetIndex !== -1 && i18nStrings.skipToButtonLabel\n      ? i18nStrings.skipToButtonLabel(steps[skipToTargetIndex], skipToTargetIndex + 1)\n      : undefined;\n\n  return (\n    <>\n      <AnalyticsFunnelStep\n        instanceIdentifier={analyticsMetadata?.instanceIdentifier}\n        errorContext={analyticsMetadata?.errorContext}\n        stepNameSelector={STEP_NAME_SELECTOR}\n        stepNumber={activeStepIndex + 1}\n      >\n        {({ funnelStepProps }) => (\n          <>\n            <WizardFormHeader isMobile={isMobile || showCollapsedSteps} isVisualRefresh={isVisualRefresh}>\n              <div className={clsx(styles['collapsed-steps'], !showCollapsedSteps && styles['collapsed-steps-hidden'])}>\n                {i18nStrings.collapsedStepsLabel?.(activeStepIndex + 1, steps.length)}\n              </div>\n              <InternalHeader\n                className={styles['form-header-component']}\n                variant=\"h1\"\n                description={description}\n                info={info}\n              >\n                <span className={styles['form-header-component-wrapper']} tabIndex={-1} ref={stepHeaderRef}>\n                  <span {...{ [DATA_ATTR_FUNNEL_KEY]: FUNNEL_KEY_STEP_NAME }}>{title}</span>\n                  {isOptional && <i>{` - ${i18nStrings.optional}`}</i>}\n                </span>\n              </InternalHeader>\n            </WizardFormHeader>\n\n            <InternalForm\n              __internalRootRef={elementRef}\n              className={clsx(styles['form-component'])}\n              actions={\n                <WizardActions\n                  cancelButtonText={i18nStrings.cancelButton}\n                  primaryButtonText={isLastStep ? submitButtonText ?? i18nStrings.submitButton : i18nStrings.nextButton}\n                  primaryButtonLoadingText={\n                    isLastStep ? i18nStrings.submitButtonLoadingAnnouncement : i18nStrings.nextButtonLoadingAnnouncement\n                  }\n                  previousButtonText={i18nStrings.previousButton}\n                  onCancelClick={onCancelClick}\n                  onPreviousClick={onPreviousClick}\n                  onPrimaryClick={onPrimaryClick}\n                  onSkipToClick={() => onSkipToClick(skipToTargetIndex)}\n                  showPrevious={activeStepIndex !== 0}\n                  isPrimaryLoading={isPrimaryLoading}\n                  showSkipTo={showSkipTo}\n                  skipToButtonText={skipToButtonText}\n                />\n              }\n              secondaryActions={secondaryActions}\n              errorText={errorText}\n              errorIconAriaLabel={i18nStrings.errorIconAriaLabel}\n              {...funnelStepProps}\n            >\n              {content}\n            </InternalForm>\n          </>\n        )}\n      </AnalyticsFunnelStep>\n    </>\n  );\n}\n\nfunction findSkipToTargetIndex(steps: ReadonlyArray<WizardProps.Step>, activeStepIndex: number): number {\n  let nextRequiredStepIndex = activeStepIndex;\n  do {\n    nextRequiredStepIndex++;\n  } while (nextRequiredStepIndex < steps.length - 1 && steps[nextRequiredStepIndex].isOptional);\n\n  return nextRequiredStepIndex > activeStepIndex + 1 ? nextRequiredStepIndex : -1;\n}\n"]}