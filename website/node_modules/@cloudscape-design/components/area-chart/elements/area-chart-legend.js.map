{"version":3,"file":"area-chart-legend.js","sourceRoot":"","sources":["../../../../src/area-chart/elements/area-chart-legend.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAG7C,OAAO,WAAW,MAAM,wCAAwC,CAAC;AAEjE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,eAAe,IAAI,CAAC,eAAe,CAA2B,CAAC;AAE/D,SAAS,eAAe,CAAqC,EAC3D,KAAK,EACL,WAAW,EACX,SAAS,EACT,gBAAgB,GAMjB;IACC,MAAM,WAAW,GAAG,OAAO,CACzB,GAAG,EAAE,CACH,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;QACnB,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAChE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;IAC7D,CAAC,CAAC,EACJ,CAAC,KAAK,CAAC,CACR,CAAC;IAEF,MAAM,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAElF,OAAO,CACL,oBAAC,WAAW,IACV,MAAM,EAAE,WAAW,EACnB,iBAAiB,EAAE,YAAY,EAC/B,iBAAiB,EAAE,KAAK,CAAC,QAAQ,CAAC,iBAAiB,EACnD,WAAW,EAAE,WAAW,EACxB,SAAS,EAAE,SAAS,EACpB,gBAAgB,EAAE,gBAAgB,GAClC,CACH,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useMemo } from 'react';\n\nimport { AreaChartProps } from '../interfaces';\nimport ChartLegend from '../../internal/components/chart-legend';\nimport { ChartModel } from '../model';\nimport { useSelector } from '../async-store';\n\nexport default memo(AreaChartLegend) as typeof AreaChartLegend;\n\nfunction AreaChartLegend<T extends AreaChartProps.DataTypes>({\n  model,\n  legendTitle,\n  ariaLabel,\n  plotContainerRef,\n}: {\n  model: ChartModel<T>;\n  plotContainerRef: React.RefObject<HTMLDivElement>;\n  legendTitle?: string;\n  ariaLabel?: string;\n}) {\n  const legendItems = useMemo(\n    () =>\n      model.series.map(s => {\n        const { title, color, markerType } = model.getInternalSeries(s);\n        return { label: title, color, type: markerType, datum: s };\n      }),\n    [model]\n  );\n\n  const legendSeries = useSelector(model.interactions, state => state.legendSeries);\n\n  return (\n    <ChartLegend\n      series={legendItems}\n      highlightedSeries={legendSeries}\n      onHighlightChange={model.handlers.onLegendHighlight}\n      legendTitle={legendTitle}\n      ariaLabel={ariaLabel}\n      plotContainerRef={plotContainerRef}\n    />\n  );\n}\n"]}