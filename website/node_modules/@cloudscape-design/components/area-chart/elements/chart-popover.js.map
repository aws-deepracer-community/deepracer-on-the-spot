{"version":3,"file":"chart-popover.js","sourceRoot":"","sources":["../../../../src/area-chart/elements/chart-popover.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,YAAY,MAAM,yCAAyC,CAAC;AACnE,OAAO,kBAAkB,MAAM,gDAAgD,CAAC;AAIhF,OAAO,MAAM,MAAM,kBAAkB,CAAC;AAEtC,OAAO,kBAAkB,MAAM,gDAAgD,CAAC;AAEhF,MAAM,CAAC,OAAO,UAAU,gBAAgB,CAAqC,EAC3E,KAAK,EACL,gBAAgB,EAChB,gBAAgB,EAChB,MAAM,EACN,IAAI,EACJ,MAAM,GAQP;IACC,IAAI,CAAC,gBAAgB,EAAE;QACrB,OAAO,IAAI,CAAC;KACb;IAED,MAAM,YAAY,GAAG;QACnB,KAAK,EAAE,gBAAgB,CAAC,UAAU;QAClC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,cAAc;QACnC,QAAQ,EAAE,gBAAgB,CAAC,cAAc;QACzC,aAAa,EAAE,gBAAgB,CAAC,eAAe;QAC/C,SAAS,EAAE,KAAK,CAAC,QAAQ,CAAC,gBAAgB;QAC1C,YAAY,EAAE,KAAK,CAAC,QAAQ,CAAC,cAAc;QAC3C,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,UAAU;KAC3B,CAAC;IAEF,OAAO,CACL,oBAAC,YAAY,oBACP,YAAY,IAChB,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EACvC,gBAAgB,EAAE,gBAAgB,EAClC,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,MAAM;QAEd,oBAAC,kBAAkB,IAAC,OAAO,EAAE,gBAAgB,CAAC,aAAa,GAAI;QAC/D,6BAAK,SAAS,EAAE,MAAM,CAAC,iBAAiB,CAAC,GAAI;QAC7C,oBAAC,kBAAkB,IAAC,OAAO,EAAE,gBAAgB,CAAC,YAAY,GAAI;QAC7D,MAAM,IAAI,oBAAC,kBAAkB,QAAE,MAAM,CAAsB,CAC/C,CAChB,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport ChartPopover from '../../internal/components/chart-popover';\nimport ChartSeriesDetails from '../../internal/components/chart-series-details';\n\nimport { AreaChartProps } from '../interfaces';\nimport { ChartModel } from '../model';\nimport styles from '../styles.css.js';\nimport { HighlightDetails } from './use-highlight-details';\nimport ChartPopoverFooter from '../../internal/components/chart-popover-footer';\n\nexport default function AreaChartPopover<T extends AreaChartProps.DataTypes>({\n  model,\n  highlightDetails,\n  dismissAriaLabel,\n  footer,\n  size,\n  onBlur,\n}: {\n  model: ChartModel<T>;\n  highlightDetails: null | HighlightDetails;\n  dismissAriaLabel?: string;\n  footer?: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  onBlur?: (event: React.FocusEvent) => void;\n}) {\n  if (!highlightDetails) {\n    return null;\n  }\n\n  const popoverProps = {\n    title: highlightDetails.formattedX,\n    trackRef: model.refs.verticalMarker,\n    trackKey: highlightDetails.highlightIndex,\n    dismissButton: highlightDetails.isPopoverPinned,\n    onDismiss: model.handlers.onPopoverDismiss,\n    onMouseLeave: model.handlers.onPopoverLeave,\n    ref: model.refs.popoverRef,\n  };\n\n  return (\n    <ChartPopover\n      {...popoverProps}\n      container={model.refs.container.current}\n      dismissAriaLabel={dismissAriaLabel}\n      size={size}\n      onBlur={onBlur}\n    >\n      <ChartSeriesDetails details={highlightDetails.seriesDetails} />\n      <div className={styles['popover-divider']} />\n      <ChartSeriesDetails details={highlightDetails.totalDetails} />\n      {footer && <ChartPopoverFooter>{footer}</ChartPopoverFooter>}\n    </ChartPopover>\n  );\n}\n"]}