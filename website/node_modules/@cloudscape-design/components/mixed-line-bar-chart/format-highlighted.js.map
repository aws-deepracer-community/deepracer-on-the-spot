{"version":3,"file":"format-highlighted.js","sourceRoot":"","sources":["../../../src/mixed-line-bar-chart/format-highlighted.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ChartDataTypes, InternalChartSeries, MixedLineBarChartProps } from './interfaces';\nimport { ChartSeriesDetailItem } from '../internal/components/chart-series-details';\nimport { CartesianChartProps } from '../internal/components/cartesian-chart/interfaces';\nimport { isDataSeries, isXThreshold, isYThreshold, matchesX } from './utils';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nexport interface HighlightDetails {\n  position: string;\n  details: ChartSeriesDetailItem[];\n}\n\n/** Formats provided x-position and its corresponding series values. */\nexport default function formatHighlighted<T extends ChartDataTypes>({\n  position,\n  series,\n  xTickFormatter,\n  detailPopoverSeriesContent,\n}: {\n  position: T;\n  series: readonly InternalChartSeries<T>[];\n  xTickFormatter?: CartesianChartProps.TickFormatter<T>;\n  detailPopoverSeriesContent?: MixedLineBarChartProps.DetailPopoverSeriesContent<T>;\n}): HighlightDetails {\n  const formattedPosition = xTickFormatter ? xTickFormatter(position) : position.toString();\n\n  const details: ChartSeriesDetailItem[] = [];\n  series.forEach(s => {\n    const detail = getSeriesDetail({ internalSeries: s, targetX: position, detailPopoverSeriesContent });\n    if (detail) {\n      details.push(detail);\n    }\n  });\n\n  return { position: formattedPosition, details };\n}\n\nfunction getSeriesDetail<T>({\n  internalSeries,\n  targetX,\n  detailPopoverSeriesContent,\n}: {\n  internalSeries: InternalChartSeries<T>;\n  targetX: T;\n  detailPopoverSeriesContent?: MixedLineBarChartProps.DetailPopoverSeriesContent<T>;\n}): ChartSeriesDetailItem | null {\n  const { series, color } = internalSeries;\n\n  // X-thresholds are only shown when X matches.\n  if (isXThreshold(series)) {\n    return series.x === targetX\n      ? {\n          key: series.title,\n          value: '',\n          color,\n          markerType: 'dashed',\n        }\n      : null;\n  }\n\n  if (isYThreshold(series)) {\n    return {\n      key: series.title,\n      value: series.valueFormatter ? series.valueFormatter(series.y) : series.y,\n      color,\n      markerType: 'dashed',\n    };\n  }\n\n  if (isDataSeries(series)) {\n    for (const datum of series.data) {\n      if (matchesX(targetX, datum.x)) {\n        const customContent = detailPopoverSeriesContent\n          ? detailPopoverSeriesContent({ series, x: targetX, y: datum.y })\n          : undefined;\n        const hasSubItems = !!customContent?.subItems?.length;\n        const isExpandable = customContent?.expandable && hasSubItems;\n        const isKeyString = typeof customContent?.key === 'string';\n        const key = customContent?.key && (!isExpandable || isKeyString) ? customContent.key : series.title;\n\n        if (customContent?.expandable && !hasSubItems) {\n          warnOnce(\n            'MixedLineBarChart',\n            '`expandable` was set to `true` for a series without sub-items. This property will be ignored.'\n          );\n        }\n        if (isExpandable && !isKeyString) {\n          warnOnce(\n            'MixedLineBarChart',\n            'A ReactNode was used for the key of an expandable series. The series title will be used instead because nested interactive elements can cause accessiblity issues.'\n          );\n        }\n        if (!isKeyString && !isExpandable && customContent?.value && typeof customContent.value !== 'string') {\n          warnOnce(\n            'MixedLineBarChart',\n            'Use a ReactNode for the key or the value of a series, but not for both. It is not recommended to use links for key and value at the same time.'\n          );\n        }\n\n        return {\n          key,\n          value: customContent?.value || (series.valueFormatter ? series.valueFormatter(datum.y, targetX) : datum.y),\n          color,\n          markerType: series.type === 'line' ? 'line' : 'rectangle',\n          subItems: customContent?.subItems,\n          expandableId: isExpandable ? series.title : undefined,\n        };\n      }\n    }\n  }\n\n  return null;\n}\n"]}