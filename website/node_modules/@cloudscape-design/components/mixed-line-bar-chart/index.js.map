{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/mixed-line-bar-chart/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AAGxE,OAAO,yBAAyB,MAAM,YAAY,CAAC;AACnD,OAAO,gBAAgB,MAAM,sCAAsC,CAAC;AAIpE,SAAS,iBAAiB,CAAmC,EAWjC;QAXiC,EAC3D,MAAM,GAAG,EAAE,EACX,MAAM,GAAG,GAAG,EACZ,UAAU,GAAG,QAAQ,EACrB,UAAU,GAAG,QAAQ,EACrB,WAAW,GAAG,KAAK,EACnB,cAAc,GAAG,KAAK,EACtB,UAAU,GAAG,UAAU,EACvB,iBAAiB,GAAG,QAAQ,EAC5B,qBAAqB,GAAG,IAAI,OAEF,EADvB,KAAK,cAVmD,6IAW5D,CADS;IAER,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,mBAAmB,EAAE;QAC/D,KAAK,EAAE;YACL,iBAAiB;YACjB,qBAAqB;YACrB,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,cAAc;YACd,WAAW;YACX,UAAU;YACV,UAAU;SACX;KACF,CAAC,CAAC;IACH,OAAO,CACL,oBAAC,yBAAyB,kBACxB,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,WAAW,EACxB,cAAc,EAAE,cAAc,EAC9B,UAAU,EAAE,UAAU,EACtB,iBAAiB,EAAE,iBAAiB,EACpC,qBAAqB,EAAE,qBAAqB,IACxC,KAAK,EACL,kBAAkB,EACtB,CACH,CAAC;AACJ,CAAC;AAED,gBAAgB,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;AAEzD,eAAe,iBAAiB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\n\nimport { MixedLineBarChartProps } from './interfaces';\nimport InternalMixedLineBarChart from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { MixedLineBarChartProps };\n\nfunction MixedLineBarChart<T extends number | string | Date>({\n  series = [],\n  height = 500,\n  xScaleType = 'linear',\n  yScaleType = 'linear',\n  stackedBars = false,\n  horizontalBars = false,\n  statusType = 'finished',\n  detailPopoverSize = 'medium',\n  emphasizeBaselineAxis = true,\n  ...props\n}: MixedLineBarChartProps<T>) {\n  const baseComponentProps = useBaseComponent('MixedLineBarChart', {\n    props: {\n      detailPopoverSize,\n      emphasizeBaselineAxis,\n      fitHeight: props.fitHeight,\n      hideFilter: props.hideFilter,\n      hideLegend: props.hideLegend,\n      horizontalBars,\n      stackedBars,\n      xScaleType,\n      yScaleType,\n    },\n  });\n  return (\n    <InternalMixedLineBarChart\n      series={series}\n      height={height}\n      xScaleType={xScaleType}\n      yScaleType={yScaleType}\n      stackedBars={stackedBars}\n      horizontalBars={horizontalBars}\n      statusType={statusType}\n      detailPopoverSize={detailPopoverSize}\n      emphasizeBaselineAxis={emphasizeBaselineAxis}\n      {...props}\n      {...baseComponentProps}\n    />\n  );\n}\n\napplyDisplayName(MixedLineBarChart, 'MixedLineBarChart');\n\nexport default MixedLineBarChart;\n"]}