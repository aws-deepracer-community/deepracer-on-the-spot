{"version":3,"file":"chart-container.js","sourceRoot":"","sources":["../../../src/mixed-line-bar-chart/chart-container.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\n\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\nimport { getXTickCount, getYTickCount, createXTicks, createYTicks } from '../internal/components/cartesian-chart/ticks';\nimport ChartPlot, { ChartPlotRef } from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels, { useBottomLabels } from '../internal/components/cartesian-chart/bottom-labels';\nimport VerticalGridLines from '../internal/components/cartesian-chart/vertical-grid-lines';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport HighlightedPoint from '../internal/components/cartesian-chart/highlighted-point';\nimport VerticalMarker from '../internal/components/cartesian-chart/vertical-marker';\nimport { ChartScale, NumericChartScale } from '../internal/components/cartesian-chart/scales';\nimport MixedChartPopover from './chart-popover';\nimport { ChartDataTypes, InternalChartSeries, MixedLineBarChartProps, ScaleType, VerticalMarkerX } from './interfaces';\nimport { computeDomainX, computeDomainY } from './domain';\nimport { isXThreshold } from './utils';\nimport makeScaledSeries, { ScaledPoint } from './make-scaled-series';\nimport makeScaledBarGroups, { ScaledBarGroup } from './make-scaled-bar-groups';\nimport formatHighlighted from './format-highlighted';\nimport DataSeries from './data-series';\nimport BarGroups from './bar-groups';\nimport { useMouseHover } from './hooks/use-mouse-hover';\nimport { useNavigation } from './hooks/use-navigation';\nimport { usePopover } from './hooks/use-popover';\n\nimport { CartesianChartProps } from '../internal/components/cartesian-chart/interfaces';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport { CartesianChartContainer } from '../internal/components/cartesian-chart/chart-container';\nimport { useHeightMeasure } from '../internal/hooks/container-queries/use-height-measure';\n\nconst LEFT_LABELS_MARGIN = 16;\nconst BOTTOM_LABELS_OFFSET = 12;\n\ntype TickFormatter = undefined | ((value: ChartDataTypes) => string);\n\nexport interface ChartContainerProps<T extends ChartDataTypes> {\n  series: ReadonlyArray<InternalChartSeries<T>>;\n  visibleSeries: ReadonlyArray<InternalChartSeries<T>>;\n\n  fitHeight?: boolean;\n  height: number;\n  detailPopoverSize: MixedLineBarChartProps<T>['detailPopoverSize'];\n  detailPopoverFooter: MixedLineBarChartProps<T>['detailPopoverFooter'];\n\n  xScaleType: ScaleType;\n  yScaleType: 'linear' | 'log';\n\n  xDomain: MixedLineBarChartProps<T>['xDomain'];\n  yDomain: MixedLineBarChartProps<T>['yDomain'];\n\n  xTickFormatter?: CartesianChartProps.TickFormatter<T>;\n  yTickFormatter?: CartesianChartProps.TickFormatter<number>;\n\n  xTitle?: string;\n  yTitle?: string;\n\n  stackedBars?: boolean;\n  emphasizeBaselineAxis: boolean;\n  horizontalBars?: boolean;\n\n  highlightedSeries?: MixedLineBarChartProps<T>['highlightedSeries'];\n  onHighlightChange: (series: InternalChartSeries<T>['series'] | null) => void;\n  highlightedPoint: ScaledPoint<T> | null;\n  setHighlightedPoint: (point: ScaledPoint<T> | null) => void;\n  highlightedGroupIndex: number | null;\n  setHighlightedGroupIndex: (groupIndex: number | null) => void;\n\n  ariaLabel: MixedLineBarChartProps<T>['ariaLabel'];\n  ariaLabelledby: MixedLineBarChartProps<T>['ariaLabelledby'];\n  ariaDescription: MixedLineBarChartProps<T>['ariaDescription'];\n  i18nStrings: MixedLineBarChartProps<T>['i18nStrings'];\n\n  detailPopoverSeriesContent?: MixedLineBarChartProps.DetailPopoverSeriesContent<T>;\n}\n\ninterface BaseAxisProps {\n  tickCount: number;\n  tickFormatter: TickFormatter;\n  title?: string;\n  ariaRoleDescription?: string;\n}\n\ninterface XAxisProps extends BaseAxisProps {\n  axis: 'x';\n  scale: ChartScale;\n  ticks: ChartDataTypes[];\n}\n\ninterface YAxisProps extends BaseAxisProps {\n  axis: 'y';\n  scale: NumericChartScale;\n  ticks: number[];\n}\n\nconst fallbackContainerWidth = 500;\n\nexport default function ChartContainer<T extends ChartDataTypes>({\n  fitHeight,\n  height: explicitPlotHeight,\n  series,\n  visibleSeries,\n  highlightedSeries,\n  onHighlightChange,\n  highlightedPoint,\n  setHighlightedPoint,\n  highlightedGroupIndex,\n  setHighlightedGroupIndex,\n  detailPopoverFooter,\n  detailPopoverSize = 'medium',\n  stackedBars = false,\n  horizontalBars = false,\n  xScaleType,\n  yScaleType,\n  xTickFormatter,\n  yTickFormatter,\n  emphasizeBaselineAxis,\n  xTitle,\n  yTitle,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  i18nStrings = {},\n  detailPopoverSeriesContent,\n  ...props\n}: ChartContainerProps<T>) {\n  const plotRef = useRef<ChartPlotRef>(null);\n  const verticalMarkerRef = useRef<SVGLineElement>(null);\n\n  const [leftLabelsWidth, setLeftLabelsWidth] = useState(0);\n  const [verticalMarkerX, setVerticalMarkerX] = useState<VerticalMarkerX<T> | null>(null);\n  const [detailsPopoverText, setDetailsPopoverText] = useState('');\n  const [containerWidth, containerMeasureRef] = useContainerWidth(fallbackContainerWidth);\n  const maxLeftLabelsWidth = Math.round(containerWidth / 2);\n  const plotWidth = containerWidth\n    ? // Calculate the minimum between leftLabelsWidth and maxLeftLabelsWidth for extra safety because leftLabelsWidth could be out of date\n      Math.max(0, containerWidth - Math.min(leftLabelsWidth, maxLeftLabelsWidth) - LEFT_LABELS_MARGIN)\n    : fallbackContainerWidth;\n  const containerRefObject = useRef(null);\n  const containerRef = useMergeRefs(containerMeasureRef, containerRefObject);\n  const popoverRef = useRef<HTMLElement | null>(null);\n\n  const xDomain = (props.xDomain || computeDomainX(series, xScaleType)) as\n    | readonly number[]\n    | readonly string[]\n    | readonly Date[];\n  const yDomain = (props.yDomain || computeDomainY(series, yScaleType, stackedBars)) as readonly number[];\n\n  const linesOnly = series.every(({ series }) => series.type === 'line' || series.type === 'threshold');\n\n  function getXAxisProps(size: number, range: [from: number, until: number]): XAxisProps {\n    const tickCount = getXTickCount(size);\n    const scale = new ChartScale(xScaleType, xDomain, range, linesOnly);\n    const ticks = createXTicks(scale, tickCount);\n    return {\n      axis: 'x',\n      tickCount,\n      scale,\n      ticks,\n      tickFormatter: xTickFormatter as TickFormatter,\n      title: xTitle,\n      ariaRoleDescription: i18nStrings.xAxisAriaRoleDescription,\n    };\n  }\n\n  function getYAxisProps(size: number, range: [from: number, until: number]): YAxisProps {\n    const tickCount = getYTickCount(size);\n    const scale = new NumericChartScale(yScaleType, yDomain, range, props.yDomain ? null : tickCount);\n    const ticks = createYTicks(scale, tickCount);\n    return {\n      axis: 'y',\n      tickCount,\n      scale,\n      ticks,\n      tickFormatter: yTickFormatter as TickFormatter,\n      title: yTitle,\n      ariaRoleDescription: i18nStrings.yAxisAriaRoleDescription,\n    };\n  }\n\n  const bottomAxisProps = !horizontalBars\n    ? getXAxisProps(plotWidth, [0, plotWidth])\n    : getYAxisProps(plotWidth, [0, plotWidth]);\n\n  const bottomLabelsProps = useBottomLabels({ ...bottomAxisProps });\n\n  const plotMeasureRef = useRef<SVGLineElement>(null);\n  const measuredHeight = useHeightMeasure(() => plotMeasureRef.current, !fitHeight);\n  const plotHeight = fitHeight ? measuredHeight ?? 0 : explicitPlotHeight;\n\n  const leftAxisProps = !horizontalBars\n    ? getYAxisProps(plotHeight, [plotHeight, 0])\n    : getXAxisProps(plotHeight, [0, plotHeight]);\n\n  const xAxisProps = bottomAxisProps.axis === 'x' ? bottomAxisProps : leftAxisProps.axis === 'x' ? leftAxisProps : null;\n  const yAxisProps = bottomAxisProps.axis === 'y' ? bottomAxisProps : leftAxisProps.axis === 'y' ? leftAxisProps : null;\n  if (!xAxisProps || !yAxisProps) {\n    throw new Error('Invariant violation: invalid axis props.');\n  }\n\n  /**\n   * Interactions\n   */\n  const highlightedPointRef = useRef<SVGGElement>(null);\n  const highlightedGroupRef = useRef<SVGRectElement>(null);\n\n  // Some chart components are rendered against \"x\" or \"y\" axes,\n  // When \"horizontalBars\" is enabled, the axes are inverted.\n  const x = !horizontalBars ? 'x' : 'y';\n  const y = !horizontalBars ? 'y' : 'x';\n\n  const scaledSeries = makeScaledSeries(visibleSeries, xAxisProps.scale, yAxisProps.scale);\n  const barGroups: ScaledBarGroup<T>[] = makeScaledBarGroups(visibleSeries, xAxisProps.scale, plotWidth, plotHeight, y);\n\n  const { isPopoverOpen, isPopoverPinned, showPopover, pinPopover, dismissPopover } = usePopover();\n\n  // Allows to add a delay between popover is dismissed and handlers are enabled to prevent immediate popover reopening.\n  const [isHandlersDisabled, setHandlersDisabled] = useState(!isPopoverPinned);\n  useEffect(() => {\n    if (isPopoverPinned) {\n      setHandlersDisabled(true);\n    } else {\n      const timeoutId = setTimeout(() => setHandlersDisabled(false), 25);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isPopoverPinned]);\n\n  const highlightSeries = useCallback(\n    (series: MixedLineBarChartProps.ChartSeries<T> | null) => {\n      if (series !== highlightedSeries) {\n        onHighlightChange(series);\n      }\n    },\n    [highlightedSeries, onHighlightChange]\n  );\n\n  const highlightPoint = useCallback(\n    (point: ScaledPoint<T> | null) => {\n      setHighlightedGroupIndex(null);\n      setHighlightedPoint(point);\n      if (point) {\n        highlightSeries(point.series);\n        setVerticalMarkerX({\n          scaledX: point.x,\n          label: point.datum?.x ?? null,\n        });\n      }\n    },\n    [setHighlightedGroupIndex, setHighlightedPoint, highlightSeries]\n  );\n\n  const clearAllHighlights = useCallback(() => {\n    setHighlightedPoint(null);\n    highlightSeries(null);\n    setHighlightedGroupIndex(null);\n  }, [highlightSeries, setHighlightedGroupIndex, setHighlightedPoint]);\n\n  // Highlight all points at a given X in a line chart\n  const highlightX = useCallback(\n    (marker: VerticalMarkerX<T> | null) => {\n      if (marker) {\n        clearAllHighlights();\n      }\n      setVerticalMarkerX(marker);\n    },\n    [clearAllHighlights]\n  );\n\n  // Highlight all points and bars at a given X index in a mixed line and bar chart\n  const highlightGroup = useCallback(\n    (groupIndex: number) => {\n      highlightSeries(null);\n      setHighlightedPoint(null);\n      setHighlightedGroupIndex(groupIndex);\n    },\n    [highlightSeries, setHighlightedPoint, setHighlightedGroupIndex]\n  );\n\n  const clearHighlightedSeries = useCallback(() => {\n    clearAllHighlights();\n    dismissPopover();\n  }, [dismissPopover, clearAllHighlights]);\n\n  const { isGroupNavigation, ...handlers } = useNavigation({\n    series,\n    visibleSeries,\n    scaledSeries,\n    barGroups,\n    xScale: xAxisProps.scale,\n    yScale: yAxisProps.scale,\n    highlightedPoint,\n    highlightedGroupIndex,\n    highlightedSeries,\n    isHandlersDisabled,\n    pinPopover,\n    highlightSeries,\n    highlightGroup,\n    highlightPoint,\n    highlightX,\n    clearHighlightedSeries,\n    verticalMarkerX,\n  });\n\n  const { onSVGMouseMove, onSVGMouseOut, onPopoverLeave } = useMouseHover<T>({\n    scaledSeries,\n    barGroups,\n    plotRef,\n    popoverRef,\n    highlightPoint,\n    highlightGroup,\n    clearHighlightedSeries,\n    isGroupNavigation,\n    isHandlersDisabled,\n    highlightX,\n  });\n\n  // There are multiple ways to indicate what X is selected.\n  // TODO: make a uniform verticalMarkerX state to fit all use-cases.\n  const highlightedX = useMemo(() => {\n    if (highlightedGroupIndex !== null) {\n      return barGroups[highlightedGroupIndex].x;\n    }\n    if (verticalMarkerX !== null) {\n      return verticalMarkerX.label;\n    }\n    return highlightedPoint?.datum?.x ?? null;\n  }, [highlightedPoint, verticalMarkerX, highlightedGroupIndex, barGroups]);\n\n  useEffect(() => {\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        dismissPopover();\n      }\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  }, [dismissPopover]);\n\n  useLayoutEffect(() => {\n    if (highlightedX !== null || highlightedPoint !== null) {\n      showPopover();\n    }\n  }, [highlightedX, highlightedPoint, showPopover]);\n\n  const onPopoverDismiss = (outsideClick?: boolean) => {\n    dismissPopover();\n\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(() => {\n        const isSomeElementHighlighted = !!(highlightedPoint || highlightedGroupIndex !== null || verticalMarkerX);\n        if (isSomeElementHighlighted) {\n          plotRef.current?.focusApplication();\n        } else {\n          plotRef.current?.focusPlot();\n        }\n      }, 0);\n    } else {\n      clearAllHighlights();\n      setVerticalMarkerX(null);\n    }\n  };\n\n  const onSVGClick = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    if (isPopoverOpen) {\n      if (isPopoverPinned) {\n        dismissPopover();\n      } else {\n        pinPopover();\n        e.preventDefault();\n      }\n    } else {\n      showPopover();\n    }\n  };\n\n  const onApplicationFocus = (event: React.FocusEvent, trigger: 'mouse' | 'keyboard') => {\n    if (trigger === 'keyboard') {\n      handlers.onFocus();\n    } else {\n      // noop: clicks are handled separately\n    }\n  };\n\n  const onApplicationBlur = (event: React.FocusEvent<Element>) => {\n    const blurTarget = event.relatedTarget || event.target;\n    if (\n      blurTarget === null ||\n      !(blurTarget instanceof Element) ||\n      !nodeBelongs(containerRefObject.current, blurTarget)\n    ) {\n      clearHighlightedSeries();\n      setVerticalMarkerX(null);\n\n      if (isPopoverOpen && !isPopoverPinned) {\n        dismissPopover();\n      }\n    }\n  };\n\n  const onSVGKeyDown = handlers.onKeyDown;\n\n  const xOffset = xAxisProps.scale.isCategorical() ? Math.max(0, xAxisProps.scale.d3Scale.bandwidth() - 1) / 2 : 0;\n\n  let verticalLineX: number | null = null;\n  if (verticalMarkerX !== null) {\n    verticalLineX = verticalMarkerX.scaledX;\n  } else if (isGroupNavigation && highlightedGroupIndex !== null) {\n    const x = xAxisProps.scale.d3Scale(barGroups[highlightedGroupIndex].x as any) ?? null;\n    if (x !== null) {\n      verticalLineX = xOffset + x;\n    }\n  }\n\n  const point = useMemo(\n    () =>\n      highlightedPoint\n        ? {\n            key: `${highlightedPoint.x}-${highlightedPoint.y}`,\n            x: highlightedPoint.x,\n            y: highlightedPoint.y,\n            color: highlightedPoint.color,\n          }\n        : null,\n    [highlightedPoint]\n  );\n\n  const verticalMarkers = useMemo(\n    () =>\n      verticalLineX !== null\n        ? scaledSeries\n            .filter(({ x, y }) => (x === verticalLineX || isNaN(x)) && !isNaN(y))\n            .map(({ x, y, color }, index) => ({\n              key: `${index}-${x}-${y}`,\n              x: !horizontalBars ? verticalLineX || 0 : y,\n              y: !horizontalBars ? y : verticalLineX || 0,\n              color: color,\n            }))\n        : [],\n    [scaledSeries, verticalLineX, horizontalBars]\n  );\n\n  const highlightedElementRef = isGroupNavigation\n    ? highlightedGroupRef\n    : highlightedPoint\n    ? highlightedPointRef\n    : verticalMarkerRef;\n\n  const highlightDetails = useMemo(() => {\n    if (highlightedX === null) {\n      return null;\n    }\n\n    // When series point is highlighted show the corresponding series and matching x-thresholds.\n    if (highlightedPoint) {\n      const seriesToShow = visibleSeries.filter(\n        series => series.series === highlightedPoint?.series || isXThreshold(series.series)\n      );\n      return formatHighlighted({\n        position: highlightedX,\n        series: seriesToShow,\n        xTickFormatter,\n        detailPopoverSeriesContent,\n      });\n    }\n\n    // Otherwise - show all visible series details.\n    return formatHighlighted({\n      position: highlightedX,\n      series: visibleSeries,\n      xTickFormatter,\n      detailPopoverSeriesContent,\n    });\n  }, [highlightedX, highlightedPoint, visibleSeries, xTickFormatter, detailPopoverSeriesContent]);\n\n  const detailPopoverFooterContent = useMemo(\n    () => (detailPopoverFooter && highlightedX ? detailPopoverFooter(highlightedX) : null),\n    [detailPopoverFooter, highlightedX]\n  );\n\n  const activeAriaLabel =\n    highlightDetails && detailsPopoverText ? `${highlightDetails.position}, ${detailsPopoverText}` : '';\n\n  // Live region is used when nothing is focused e.g. when hovering.\n  const activeLiveRegion =\n    activeAriaLabel && !highlightedPoint && highlightedGroupIndex === null ? activeAriaLabel : '';\n\n  const isLineXKeyboardFocused = !highlightedPoint && verticalMarkerX;\n\n  const isRefresh = useVisualRefresh();\n\n  return (\n    <CartesianChartContainer\n      ref={containerRef}\n      minHeight={explicitPlotHeight + bottomLabelsProps.height}\n      fitHeight={!!fitHeight}\n      leftAxisLabel={<AxisLabel axis={y} position=\"left\" title={leftAxisProps.title} />}\n      leftAxisLabelMeasure={\n        <LabelsMeasure\n          ticks={leftAxisProps.ticks}\n          scale={leftAxisProps.scale}\n          tickFormatter={leftAxisProps.tickFormatter as TickFormatter}\n          autoWidth={setLeftLabelsWidth}\n          maxLabelsWidth={maxLeftLabelsWidth}\n        />\n      }\n      bottomAxisLabel={<AxisLabel axis={x} position=\"bottom\" title={bottomAxisProps.title} />}\n      chartPlot={\n        <ChartPlot\n          ref={plotRef}\n          width=\"100%\"\n          height={fitHeight ? `calc(100% - ${bottomLabelsProps.height}px)` : plotHeight}\n          offsetBottom={bottomLabelsProps.height}\n          isClickable={isPopoverOpen && !isPopoverPinned}\n          ariaLabel={ariaLabel}\n          ariaLabelledby={ariaLabelledby}\n          ariaDescription={ariaDescription}\n          ariaRoleDescription={i18nStrings?.chartAriaRoleDescription}\n          ariaLiveRegion={activeLiveRegion}\n          activeElementRef={highlightedElementRef}\n          activeElementKey={\n            highlightedGroupIndex?.toString() ??\n            (isLineXKeyboardFocused ? `point-index-${handlers.xIndex}` : point?.key)\n          }\n          activeElementFocusOffset={isGroupNavigation ? 0 : isLineXKeyboardFocused ? { x: 8, y: 0 } : 3}\n          onMouseMove={onSVGMouseMove}\n          onMouseOut={onSVGMouseOut}\n          onClick={onSVGClick}\n          onApplicationFocus={onApplicationFocus}\n          onApplicationBlur={onApplicationBlur}\n          onKeyDown={onSVGKeyDown}\n        >\n          <line\n            ref={plotMeasureRef}\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"100%\"\n            stroke=\"transparent\"\n            strokeWidth={1}\n            style={{ pointerEvents: 'none' }}\n          />\n\n          <LeftLabels\n            axis={y}\n            ticks={leftAxisProps.ticks}\n            scale={leftAxisProps.scale}\n            tickFormatter={leftAxisProps.tickFormatter as TickFormatter}\n            title={leftAxisProps.title}\n            ariaRoleDescription={leftAxisProps.ariaRoleDescription}\n            maxLabelsWidth={maxLeftLabelsWidth}\n            plotWidth={plotWidth}\n            plotHeight={plotHeight}\n          />\n\n          {horizontalBars && (\n            <VerticalGridLines scale={yAxisProps.scale} ticks={yAxisProps.ticks} height={plotHeight} />\n          )}\n\n          {emphasizeBaselineAxis && linesOnly && (\n            <EmphasizedBaseline axis={x} scale={yAxisProps.scale} width={plotWidth} height={plotHeight} />\n          )}\n\n          <DataSeries\n            axis={x}\n            plotWidth={plotWidth}\n            plotHeight={plotHeight}\n            highlightedSeries={highlightedSeries ?? null}\n            highlightedGroupIndex={highlightedGroupIndex}\n            stackedBars={stackedBars}\n            isGroupNavigation={isGroupNavigation}\n            visibleSeries={visibleSeries}\n            xScale={xAxisProps.scale}\n            yScale={yAxisProps.scale}\n          />\n\n          {emphasizeBaselineAxis && !linesOnly && (\n            <EmphasizedBaseline axis={x} scale={yAxisProps.scale} width={plotWidth} height={plotHeight} />\n          )}\n\n          <VerticalMarker\n            key={verticalLineX || ''}\n            height={plotHeight}\n            showPoints={highlightedPoint === null}\n            showLine={!isGroupNavigation}\n            points={verticalMarkers}\n            ref={verticalMarkerRef}\n          />\n\n          {highlightedPoint && (\n            <HighlightedPoint\n              ref={highlightedPointRef}\n              point={point}\n              role=\"button\"\n              ariaLabel={activeAriaLabel}\n              ariaHasPopup={true}\n              ariaExpanded={isPopoverPinned}\n            />\n          )}\n\n          {isGroupNavigation && xAxisProps.scale.isCategorical() && (\n            <BarGroups\n              ariaLabel={activeAriaLabel}\n              isRefresh={isRefresh}\n              isPopoverPinned={isPopoverPinned}\n              barGroups={barGroups}\n              highlightedGroupIndex={highlightedGroupIndex}\n              highlightedGroupRef={highlightedGroupRef}\n            />\n          )}\n\n          <BottomLabels\n            {...bottomLabelsProps}\n            axis={x}\n            scale={bottomAxisProps.scale}\n            title={bottomAxisProps.title}\n            ariaRoleDescription={bottomAxisProps.ariaRoleDescription}\n            height={plotHeight}\n            width={plotWidth}\n            offsetLeft={leftLabelsWidth + BOTTOM_LABELS_OFFSET}\n            offsetRight={BOTTOM_LABELS_OFFSET}\n          />\n        </ChartPlot>\n      }\n      popover={\n        <MixedChartPopover\n          ref={popoverRef}\n          containerRef={containerRefObject}\n          trackRef={highlightedElementRef}\n          isOpen={isPopoverOpen}\n          isPinned={isPopoverPinned}\n          highlightDetails={highlightDetails}\n          onDismiss={onPopoverDismiss}\n          size={detailPopoverSize}\n          footer={detailPopoverFooterContent}\n          dismissAriaLabel={i18nStrings.detailPopoverDismissAriaLabel}\n          onMouseLeave={onPopoverLeave}\n          onBlur={onApplicationBlur}\n          setPopoverText={setDetailsPopoverText}\n        />\n      }\n    />\n  );\n}\n"]}