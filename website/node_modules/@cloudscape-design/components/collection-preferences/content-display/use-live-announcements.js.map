{"version":3,"file":"use-live-announcements.js","sourceRoot":"","sources":["../../../../src/collection-preferences/content-display/use-live-announcements.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAE/B,MAAM,CAAC,OAAO,UAAU,oBAAoB,CAAC,EAC3C,UAAU,EACV,0BAA0B,EAC1B,gCAAgC,EAChC,gCAAgC,EAChC,4BAA4B,EAC5B,aAAa,GAId;IACC,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IACzC,IAAI,CAAC,UAAU,EAAE;QACf,mBAAmB,CAAC,OAAO,GAAG,IAAI,CAAC;KACpC;IAED,OAAO;QACL,WAAW,CAAC,EAAE,MAAM,EAAkB;YACpC,IAAI,MAAM,IAAI,0BAA0B,EAAE;gBACxC,MAAM,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;gBACzE,OAAO,0BAA0B,CAAC,KAAK,GAAG,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;aACpE;QACH,CAAC;QACD,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,EAAiB;YACxC,IAAI,gCAAgC,EAAE;gBACpC,gFAAgF;gBAChF,IAAI,mBAAmB,CAAC,OAAO,EAAE;oBAC/B,mBAAmB,CAAC,OAAO,GAAG,KAAK,CAAC;oBACpC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAAE;wBAClC,OAAO;qBACR;iBACF;gBACD,MAAM,YAAY,GAAG,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;gBAChF,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;gBACnG,OAAO,gCAAgC,CAAC,YAAY,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;aAClG;QACH,CAAC;QACD,SAAS,CAAC,EAAE,MAAM,EAAE,IAAI,EAAgB;YACtC,IAAI,gCAAgC,EAAE;gBACpC,MAAM,YAAY,GAAG,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;gBAChF,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;gBAClG,OAAO,gCAAgC,CAAC,YAAY,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;aACjG;QACH,CAAC;QACD,YAAY;YACV,OAAO,4BAA4B,CAAC;QACtC,CAAC;KACF,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CollectionPreferencesProps } from '../interfaces';\nimport { DragEndEvent, DragOverEvent, DragStartEvent } from '@dnd-kit/core';\nimport { useRef } from 'react';\n\nexport default function useLiveAnnouncements({\n  isDragging,\n  liveAnnouncementDndStarted,\n  liveAnnouncementDndItemReordered,\n  liveAnnouncementDndItemCommitted,\n  liveAnnouncementDndDiscarded,\n  sortedOptions,\n}: Partial<CollectionPreferencesProps.ContentDisplayPreference> & {\n  isDragging: boolean;\n  sortedOptions: ReadonlyArray<CollectionPreferencesProps.ContentDisplayItem>;\n}) {\n  const isFirstAnnouncement = useRef(true);\n  if (!isDragging) {\n    isFirstAnnouncement.current = true;\n  }\n\n  return {\n    onDragStart({ active }: DragStartEvent) {\n      if (active && liveAnnouncementDndStarted) {\n        const index = sortedOptions.findIndex(option => option.id === active.id);\n        return liveAnnouncementDndStarted(index + 1, sortedOptions.length);\n      }\n    },\n    onDragOver({ active, over }: DragOverEvent) {\n      if (liveAnnouncementDndItemReordered) {\n        // Don't announce on the first dragOver because it's redundant with onDragStart.\n        if (isFirstAnnouncement.current) {\n          isFirstAnnouncement.current = false;\n          if (!over || over.id === active.id) {\n            return;\n          }\n        }\n        const initialIndex = sortedOptions.findIndex(option => option.id === active.id);\n        const currentIdex = over ? sortedOptions.findIndex(option => option.id === over.id) : initialIndex;\n        return liveAnnouncementDndItemReordered(initialIndex + 1, currentIdex + 1, sortedOptions.length);\n      }\n    },\n    onDragEnd({ active, over }: DragEndEvent) {\n      if (liveAnnouncementDndItemCommitted) {\n        const initialIndex = sortedOptions.findIndex(option => option.id === active.id);\n        const finalIndex = over ? sortedOptions.findIndex(option => option.id === over.id) : initialIndex;\n        return liveAnnouncementDndItemCommitted(initialIndex + 1, finalIndex + 1, sortedOptions.length);\n      }\n    },\n    onDragCancel() {\n      return liveAnnouncementDndDiscarded;\n    },\n  };\n}\n"]}