{"version":3,"file":"widget.js","sourceRoot":"","sources":["../../../src/split-panel/widget.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AAE/D,OAAO,EAAE,gBAAgB,EAAE,MAAM,mCAAmC,CAAC;AACrE,OAAO,EAAE,wBAAwB,EAAE,MAAM,kBAAkB,CAAC;AAI5D,MAAM,UAAU,0BAA0B,CAAC,gBAAiC;IAC1E,OAAO,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QACrC,MAAM,SAAS,GAAG,gBAAgB,EAAE,CAAC;QACrC,IAAI,SAAS,IAAI,aAAa,CAAC,iBAAiB,CAAC,IAAI,gBAAgB,EAAE;YACrE,OAAO,oBAAC,gBAAgB,kBAAC,GAAG,EAAE,GAAG,IAAM,KAAK,EAAI,CAAC;SAClD;QAED,OAAO,oBAAC,wBAAwB,kBAAC,GAAG,EAAE,GAAG,IAAM,KAAK,EAAI,CAAC;IAC3D,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getGlobalFlag } from '../internal/utils/global-flags';\nimport { SplitPanelProps } from './interfaces';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { SplitPanelImplementation } from './implementation';\n\ntype SplitPanelType = React.ForwardRefExoticComponent<SplitPanelProps & React.RefAttributes<HTMLElement>>;\n\nexport function createWidgetizedSplitPanel(SplitPanelLoader?: SplitPanelType): SplitPanelType {\n  return React.forwardRef((props, ref) => {\n    const isRefresh = useVisualRefresh();\n    if (isRefresh && getGlobalFlag('appLayoutWidget') && SplitPanelLoader) {\n      return <SplitPanelLoader ref={ref} {...props} />;\n    }\n\n    return <SplitPanelImplementation ref={ref} {...props} />;\n  });\n}\n"]}