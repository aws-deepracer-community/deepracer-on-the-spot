{"version":3,"file":"property-editor.js","sourceRoot":"","sources":["../../../src/property-filter/property-editor.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAExC,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,cAAc,MAAM,oBAAoB,CAAC;AAChD,OAAO,iBAAiB,MAAM,wBAAwB,CAAC;AAYvD,MAAM,UAAU,cAAc,CAAmB,EAC/C,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,YAAY,EACZ,QAAQ,EACR,QAAQ,EACR,WAAW,GACqB;IAChC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAoB,IAAI,CAAC,CAAC;IAC5D,MAAM,WAAW,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IAC3F,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,iBAAiB,CAAC;QACvC,6BAAK,SAAS,EAAE,MAAM,CAAC,sBAAsB,CAAC;YAC5C,oBAAC,iBAAiB,IAAC,KAAK,EAAE,QAAQ,CAAC,gBAAgB,IAChD,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAClC,CAChB;QAEN,6BAAK,SAAS,EAAE,MAAM,CAAC,yBAAyB,CAAC;YAC/C,oBAAC,cAAc,IAAC,OAAO,EAAC,MAAM,EAAC,SAAS,EAAE,MAAM,CAAC,wBAAwB,CAAC,EAAE,OAAO,EAAE,QAAQ,IAC1F,WAAW,CAAC,gBAAgB,CACd;YACjB,oBAAC,cAAc,IAAC,SAAS,EAAE,MAAM,CAAC,wBAAwB,CAAC,EAAE,OAAO,EAAE,WAAW,IAC9E,WAAW,CAAC,eAAe,CACb,CACb,CACF,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState } from 'react';\nimport { I18nStrings, Token, ExtendedOperatorForm, ComparisonOperator, InternalFilteringProperty } from './interfaces';\nimport styles from './styles.css.js';\nimport InternalButton from '../button/internal';\nimport InternalFormField from '../form-field/internal';\n\ninterface PropertyEditorProps<TokenValue> {\n  property: InternalFilteringProperty;\n  operator: ComparisonOperator;\n  filter: string;\n  operatorForm: ExtendedOperatorForm<TokenValue>;\n  onCancel: () => void;\n  onSubmit: (value: Token) => void;\n  i18nStrings: I18nStrings;\n}\n\nexport function PropertyEditor<TokenValue = any>({\n  property,\n  operator,\n  filter,\n  operatorForm,\n  onCancel,\n  onSubmit,\n  i18nStrings,\n}: PropertyEditorProps<TokenValue>) {\n  const [value, onChange] = useState<null | TokenValue>(null);\n  const submitToken = () => onSubmit({ propertyKey: property.propertyKey, operator, value });\n  return (\n    <div className={styles['property-editor']}>\n      <div className={styles['property-editor-form']}>\n        <InternalFormField label={property.groupValuesLabel}>\n          {operatorForm({ value, onChange, operator, filter })}\n        </InternalFormField>\n      </div>\n\n      <div className={styles['property-editor-actions']}>\n        <InternalButton variant=\"link\" className={styles['property-editor-cancel']} onClick={onCancel}>\n          {i18nStrings.cancelActionText}\n        </InternalButton>\n        <InternalButton className={styles['property-editor-submit']} onClick={submitToken}>\n          {i18nStrings.applyActionText}\n        </InternalButton>\n      </div>\n    </div>\n  );\n}\n"]}