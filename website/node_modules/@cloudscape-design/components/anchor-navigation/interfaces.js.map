{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/anchor-navigation/interfaces.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { BaseComponentProps } from '../internal/base-component';\nimport { CancelableEventHandler, NonCancelableEventHandler } from '../internal/events';\n\nexport interface AnchorNavigationProps extends BaseComponentProps {\n  /**\n   * Adds `aria-labelledby` to the component.\n   *\n   * Use this property for identifying the header or title that labels the anchor navigation.\n   * To use it correctly, define an ID for the element either as label, and set the property to that ID.\n   */\n  ariaLabelledby?: string;\n\n  /**\n   * List of anchors. Each anchor object has the following properties:\n   *\n   * * `text` (string) - The text for the anchor item.\n   * * `href` (string) - The `id` attribute of the target HTML element that the anchor refers to.\n   * For example: `\"#section1.1\"`\n   * * `level` (number) - Level of nesting of the anchor.\n   * * `info` (string | undefined) - Additional information to display next to the link, for example: \"New\" or \"Updated\".\n   *\n   * Note: The list of anchors should be sorted in the order they appear on the page.\n   */\n  anchors: AnchorNavigationProps.Anchor[];\n\n  /**\n   * Specifies the active anchor href. When set, the component will operate in a\n   * controlled manner, and internal scroll-spy will be disabled.\n   */\n  activeHref?: string;\n\n  /**\n   * Specifies the height (in pixels) to be considered as an offset when activating anchors.\n   * This is useful when you have a fixed or sticky header that might overlap with the content as you scroll.\n   *\n   * Defaults to 0.\n   */\n  scrollSpyOffset?: number;\n\n  /**\n   * Fired when an anchor link is clicked without any modifier keys.\n   */\n  onFollow?: CancelableEventHandler<AnchorNavigationProps.Anchor>;\n\n  /**\n   * Fired when an active anchor link changes.\n   *\n   * Note: This event is triggered both by the component's internal scroll-spy logic,\n   * or when the `activeHref` prop is manually updated.\n   */\n  onActiveHrefChange?: NonCancelableEventHandler<AnchorNavigationProps.Anchor>;\n}\n\nexport namespace AnchorNavigationProps {\n  export interface Anchor {\n    /**\n     * The text for the anchor item.\n     */\n    text: string;\n\n    /**\n     * The `href` of the anchor. For example: `\"#section1.1\"`\".\n     */\n    href: string;\n\n    /**\n     * Level of nesting of the anchor.\n     */\n    level: number;\n\n    /**\n     * Additional information to display next to the link, for example: \"New\" or \"Updated\".\n     */\n    info?: string;\n  }\n}\n"]}