{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/bar-chart/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AAGxB,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AACxE,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,yBAAyB,MAAM,kCAAkC,CAAC;AACzE,OAAO,gBAAgB,MAAM,sCAAsC,CAAC;AAIpE,SAAS,QAAQ,CAAmC,EAYjC;QAZiC,EAClD,MAAM,GAAG,EAAE,EACX,MAAM,GAAG,GAAG,EACZ,UAAU,GAAG,aAAa,EAC1B,UAAU,GAAG,QAAQ,EACrB,WAAW,GAAG,KAAK,EACnB,cAAc,GAAG,KAAK,EACtB,iBAAiB,GAAG,QAAQ,EAC5B,UAAU,GAAG,UAAU,EACvB,qBAAqB,GAAG,IAAI,EAC5B,0BAA0B,OAET,EADd,KAAK,cAX0C,2KAYnD,CADS;IAER,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,UAAU,EAAE;QACtD,KAAK,EAAE;YACL,iBAAiB;YACjB,qBAAqB;YACrB,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,cAAc;YACd,WAAW;YACX,UAAU;YACV,UAAU;SACX;KACF,CAAC,CAAC;IACH,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;IACtC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;IAEzD,OAAO,CACL,oBAAC,yBAAyB,oBACpB,KAAK,EACL,kBAAkB,IACtB,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,WAAW,EACxB,cAAc,EAAE,cAAc,EAC9B,MAAM,EAAE,MAAM,EACd,iBAAiB,EAAE,iBAAiB,EACpC,UAAU,EAAE,UAAU,EACtB,qBAAqB,EAAE,qBAAqB,EAC5C,0BAA0B,EAAE,0BAA0B,IACtD,CACH,CAAC;AACJ,CAAC;AAED,gBAAgB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAEvC,eAAe,QAAQ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { BarChartProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalMixedLineBarChart from '../mixed-line-bar-chart/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { BarChartProps };\n\nfunction BarChart<T extends number | string | Date>({\n  series = [],\n  height = 500,\n  xScaleType = 'categorical',\n  yScaleType = 'linear',\n  stackedBars = false,\n  horizontalBars = false,\n  detailPopoverSize = 'medium',\n  statusType = 'finished',\n  emphasizeBaselineAxis = true,\n  detailPopoverSeriesContent,\n  ...props\n}: BarChartProps<T>) {\n  const baseComponentProps = useBaseComponent('BarChart', {\n    props: {\n      detailPopoverSize,\n      emphasizeBaselineAxis,\n      fitHeight: props.fitHeight,\n      hideFilter: props.hideFilter,\n      hideLegend: props.hideLegend,\n      horizontalBars,\n      stackedBars,\n      xScaleType,\n      yScaleType,\n    },\n  });\n  const baseProps = getBaseProps(props);\n  const className = clsx(baseProps.className, styles.root);\n\n  return (\n    <InternalMixedLineBarChart\n      {...props}\n      {...baseComponentProps}\n      className={className}\n      height={height}\n      xScaleType={xScaleType}\n      yScaleType={yScaleType}\n      stackedBars={stackedBars}\n      horizontalBars={horizontalBars}\n      series={series}\n      detailPopoverSize={detailPopoverSize}\n      statusType={statusType}\n      emphasizeBaselineAxis={emphasizeBaselineAxis}\n      detailPopoverSeriesContent={detailPopoverSeriesContent}\n    />\n  );\n}\n\napplyDisplayName(BarChart, 'BarChart');\n\nexport default BarChart;\n"]}