{"version":3,"file":"use-versions-fetch.js","sourceRoot":"","sources":["../../../../src/s3-resource-selector/s3-in-context/use-versions-fetch.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,eAAe,EAAE,sBAAsB,EAAE,MAAM,+BAA+B,CAAC;AAExF,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAE3D,OAAO,EAAE,iBAAiB,EAAE,MAAM,+CAA+C,CAAC;AAElF,MAAM,UAAU,gBAAgB,CAAC,aAAuD;IACtF,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,CAAC,gBAAgB,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxD,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,CAA4B,EAAE,CAAC,CAAC;IAExE,MAAM,YAAY,GAAG,CAAC,GAAW,EAAE,EAAE;QACnC,IAAI,GAAG,KAAK,gBAAgB,EAAE;YAC5B,OAAO;SACR;QACD,cAAc,CAAC,GAAG,CAAC,CAAC;QACpB,MAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QAChC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACpD,IAAI,SAAS,IAAI,CAAC,UAAU,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YACnE,OAAO;SACR;QACD,UAAU,CAAC,IAAI,CAAC,CAAC;QACjB,MAAM,MAAM,GAAG,eAAe,CAAC,aAAa,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;QAClE,MAAM,CAAC,OAAO,CAAC,IAAI,CACjB,QAAQ,CAAC,EAAE;YACT,UAAU,CAAC,KAAK,CAAC,CAAC;YAClB,WAAW,CACT,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACvB,KAAK,EAAE,OAAO,CAAC,SAAS;gBACxB,KAAK,EAAE,OAAO,CAAC,YAAY;aAC5B,CAAC,CAAC,CACJ,CAAC;QACJ,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,CAAC,GAAG,YAAY,sBAAsB,CAAC,EAAE;gBAC5C,UAAU,CAAC,KAAK,CAAC,CAAC;aACnB;QACH,CAAC,CACF,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IAEF,OAAO;QACL,OAAO;QACP,QAAQ;QACR,aAAa,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC;QACpC,6CAA6C;QAC7C,YAAY,EAAE,iBAAiB,CAAC,YAAY,CAAC;KAC9C,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\nimport { makeCancellable, PromiseCancelledSignal } from '../../internal/utils/promises';\nimport { SelectProps } from '../../select/interfaces';\nimport { extractBucketName, validate } from './validation';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nexport function useVersionsFetch(fetchVersions: S3ResourceSelectorProps['fetchVersions']) {\n  const [loading, setLoading] = useState(false);\n  const [lastFetchedValue, setLastFetched] = useState('');\n  const [versions, setVersions] = useState<Array<SelectProps.Option>>([]);\n\n  const loadVersions = (uri: string) => {\n    if (uri === lastFetchedValue) {\n      return;\n    }\n    setLastFetched(uri);\n    const errorCode = validate(uri);\n    const [bucketName, prefix] = extractBucketName(uri);\n    if (errorCode || !bucketName || !prefix || prefix.slice(-1) === '/') {\n      return;\n    }\n    setLoading(true);\n    const result = makeCancellable(fetchVersions(bucketName, prefix));\n    result.promise.then(\n      versions => {\n        setLoading(false);\n        setVersions(\n          versions.map(version => ({\n            value: version.VersionId,\n            label: version.LastModified,\n          }))\n        );\n      },\n      err => {\n        if (!(err instanceof PromiseCancelledSignal)) {\n          setLoading(false);\n        }\n      }\n    );\n    return result;\n  };\n\n  return {\n    loading,\n    versions,\n    resetVersions: () => setVersions([]),\n    // this function is a dependency of useEffect\n    loadVersions: useStableCallback(loadVersions),\n  };\n}\n"]}