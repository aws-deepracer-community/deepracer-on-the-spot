{"version":3,"file":"versions-table.js","sourceRoot":"","sources":["../../../../src/s3-resource-selector/s3-modal/versions-table.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { getColumnAriaLabel, compareDates } from './table-utils';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nimport { useInternalI18n } from '../../i18n/context';\n\ninterface VersionsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  pathSegments: ReadonlyArray<string>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Version> | undefined;\n  fetchData: S3ResourceSelectorProps['fetchVersions'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onSelect: (versionId: string) => void;\n}\n\nexport function VersionsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  fetchData,\n  visibleColumns,\n  onSelect,\n}: VersionsTableProps) {\n  const i18n = useInternalI18n('s3-resource-selector');\n\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Version>\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"VersionId\"\n      fetchData={() => {\n        const [bucketName, ...rest] = pathSegments;\n        return fetchData(bucketName, joinObjectPath(rest));\n      }}\n      i18nStrings={{\n        ...getSharedI18Strings(i18n, i18nStrings),\n        header: i18n('i18nStrings.selectionVersions', i18nStrings?.selectionVersions),\n        loadingText: i18n('i18nStrings.selectionVersionsLoading', i18nStrings?.selectionVersionsLoading),\n        filteringAriaLabel: i18n(\n          'i18nStrings.labelFiltering',\n          i18nStrings?.labelFiltering,\n          format => itemsType => format({ itemsType })\n        )?.(i18n('i18nStrings.selectionVersions', i18nStrings?.selectionVersions) ?? ''),\n        filteringPlaceholder: i18n(\n          'i18nStrings.selectionVersionsSearchPlaceholder',\n          i18nStrings?.selectionVersionsSearchPlaceholder\n        ),\n        emptyText: i18n('i18nStrings.selectionVersionsNoItems', i18nStrings?.selectionVersionsNoItems),\n        selectionLabels: {\n          ...i18nStrings?.labelsVersionsSelection,\n          selectionGroupLabel: i18n(\n            'i18nStrings.labelsVersionsSelection.selectionGroupLabel',\n            i18nStrings?.labelsVersionsSelection?.selectionGroupLabel\n          ),\n          itemSelectionLabel: i18n(\n            'i18nStrings.labelsVersionsSelection.itemSelectionLabel',\n            i18nStrings?.labelsVersionsSelection?.itemSelectionLabel,\n            format => (data, item) => format({ item__VersionId: item.VersionId ?? '' })\n          ),\n        },\n      }}\n      isVisualRefresh={isVisualRefresh}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled}\n      columnDefinitions={[\n        {\n          id: 'ID',\n          header: i18n('i18nStrings.columnVersionID', i18nStrings?.columnVersionID),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnVersionID', i18nStrings?.columnVersionID)\n          ),\n          sortingField: 'VersionId',\n          cell: item => item.VersionId,\n          minWidth: '250px',\n        },\n        {\n          id: 'LastModified',\n          header: i18n('i18nStrings.columnVersionLastModified', i18nStrings?.columnVersionLastModified),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnVersionLastModified', i18nStrings?.columnVersionLastModified)\n          ),\n          sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n          cell: item => formatDefault(item.LastModified),\n        },\n        {\n          id: 'Size',\n          header: i18n('i18nStrings.columnVersionSize', i18nStrings?.columnVersionSize),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnVersionSize', i18nStrings?.columnVersionSize)\n          ),\n          sortingField: 'Size',\n          cell: item => formatSize(item.Size),\n        },\n      ]}\n      onSelect={item => onSelect(item?.VersionId ?? '')}\n    />\n  );\n}\n"]}