{"version":3,"file":"table-utils.js","sourceRoot":"","sources":["../../../../src/s3-resource-selector/s3-modal/table-utils.ts"],"names":[],"mappings":"AAMA,MAAM,UAAU,QAAQ,CAAI,KAAmC,EAAE,IAAO;IACtE,OAAO,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,KAAyB,EAAE,KAAyB,EAAE,EAAE;IACnF,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,OAAO,KAAK,GAAG,KAAK,CAAC;AACvB,CAAC,CAAC;AAEF,MAAM,UAAU,kBAAkB,CAChC,IAAqD,EACrD,WAGC,EACD,UAAU,GAAG,EAAE;IAEf,OAAO,CAAC,EAAE,MAAM,EAAE,UAAU,EAAwB,EAAE,EAAE;;QACtD,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,CACL,MAAA,IAAI,CAAC,4BAA4B,EAAE,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,cAAc,4DAAG,UAAU,CAAC,EAAE,MAAM,CAAC,EAAE,CACrF,MAAM,CAAC,EAAE,UAAU,EAAE,CAAC,CACvB,mCAAI,EAAE,CACR,CAAC;SACH;QACD,IAAI,UAAU,EAAE;YACd,OAAO,CACL,MAAA,IAAI,CAAC,mCAAmC,EAAE,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,qBAAqB,4DAAG,UAAU,CAAC,EAAE,MAAM,CAAC,EAAE,CACnG,MAAM,CAAC,EAAE,UAAU,EAAE,CAAC,CACvB,mCAAI,EAAE,CACR,CAAC;SACH;QACD,OAAO,CACL,MAAA,IAAI,CAAC,kCAAkC,EAAE,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,oBAAoB,4DAAG,UAAU,CAAC,EAAE,MAAM,CAAC,EAAE,CACjG,MAAM,CAAC,EAAE,UAAU,EAAE,CAAC,CACvB,mCAAI,EAAE,CACR,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { TableProps } from '../../table/interfaces';\nimport { ComponentFormatFunction } from '../../i18n/context';\n\nexport function includes<T>(array: ReadonlyArray<T> | undefined, item: T) {\n  return !!array && array.indexOf(item) > -1;\n}\n\nexport const compareDates = (itemA: string | undefined, itemB: string | undefined) => {\n  const timeA = itemA ? new Date(itemA).getTime() : 0;\n  const timeB = itemB ? new Date(itemB).getTime() : 0;\n  return timeA - timeB;\n};\n\nexport function getColumnAriaLabel(\n  i18n: ComponentFormatFunction<'s3-resource-selector'>,\n  i18nStrings?: Pick<\n    S3ResourceSelectorProps.I18nStrings,\n    'labelNotSorted' | 'labelSortedDescending' | 'labelSortedAscending'\n  >,\n  columnName = ''\n) {\n  return ({ sorted, descending }: TableProps.LabelData) => {\n    if (!sorted) {\n      return (\n        i18n('i18nStrings.labelNotSorted', i18nStrings?.labelNotSorted?.(columnName), format =>\n          format({ columnName })\n        ) ?? ''\n      );\n    }\n    if (descending) {\n      return (\n        i18n('i18nStrings.labelSortedDescending', i18nStrings?.labelSortedDescending?.(columnName), format =>\n          format({ columnName })\n        ) ?? ''\n      );\n    }\n    return (\n      i18n('i18nStrings.labelSortedAscending', i18nStrings?.labelSortedAscending?.(columnName), format =>\n        format({ columnName })\n      ) ?? ''\n    );\n  };\n}\n"]}