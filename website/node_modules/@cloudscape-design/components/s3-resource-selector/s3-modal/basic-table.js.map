{"version":3,"file":"basic-table.js","sourceRoot":"","sources":["../../../../src/s3-resource-selector/s3-modal/basic-table.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useCollection } from '@cloudscape-design/collection-hooks';\nimport { InternalButton } from '../../button/internal';\nimport InternalHeader from '../../header/internal';\nimport { PaginationProps } from '../../pagination/interfaces';\nimport InternalPagination from '../../pagination/internal';\nimport { TableProps } from '../../table/interfaces';\nimport InternalTable from '../../table/internal';\nimport { TextFilterProps } from '../../text-filter/interfaces';\nimport InternalTextFilter from '../../text-filter/internal';\nimport useForwardFocus, { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { EmptyState } from './empty-state';\nimport { ComponentFormatFunction } from '../../i18n/context';\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\ninterface BasicS3TableStrings<T> {\n  labelRefresh?: string;\n  labelsPagination?: PaginationProps.Labels;\n  header?: string;\n  loadingText?: string;\n  filteringPlaceholder?: string;\n  filteringAriaLabel?: string;\n  filteringClearAriaLabel?: string;\n  filteringCounterText?: S3ResourceSelectorProps.I18nStrings['filteringCounterText'];\n  emptyText?: string;\n  noMatchTitle?: string;\n  noMatchSubtitle?: string;\n  clearFilterButtonText?: string;\n  selectionLabels?: TableProps.AriaLabels<T>;\n}\n\ninterface BasicS3TableProps<T> {\n  // We do not use idiomatic `ref` prop because it does not allow generics.\n  // Option 3 from this solution: https://stackoverflow.com/a/58473012/1297743\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n  fetchData: () => Promise<ReadonlyArray<T>>;\n  trackBy: TableProps.TrackBy<T>;\n  i18nStrings: BasicS3TableStrings<T>;\n  isVisualRefresh?: boolean;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<T> | undefined;\n  onSelect: (item: T | undefined) => void;\n}\n\nexport function getSharedI18Strings(\n  i18n: ComponentFormatFunction<'s3-resource-selector'>,\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined\n) {\n  return {\n    filteringCounterText: i18n(\n      'i18nStrings.filteringCounterText',\n      i18nStrings?.filteringCounterText,\n      format => count => format({ count })\n    ),\n    labelRefresh: i18n('i18nStrings.labelRefresh', i18nStrings?.labelRefresh),\n    labelsPagination: i18nStrings?.labelsPagination,\n    noMatchTitle: i18n('i18nStrings.filteringNoMatches', i18nStrings?.filteringNoMatches),\n    noMatchSubtitle: i18n('i18nStrings.filteringCantFindMatch', i18nStrings?.filteringCantFindMatch),\n    clearFilterButtonText: i18n('i18nStrings.clearFilterButtonText', i18nStrings?.clearFilterButtonText),\n    filteringClearAriaLabel: i18nStrings?.labelClearFilter,\n  };\n}\n\nexport function BasicS3Table<T>({\n  forwardFocusRef,\n  columnDefinitions,\n  fetchData,\n  trackBy,\n  i18nStrings = {},\n  isVisualRefresh,\n  visibleColumns,\n  isItemDisabled,\n  onSelect,\n}: BasicS3TableProps<T>) {\n  const [loading, setLoading] = useState(false);\n  const [allItems, setAllItems] = useState<ReadonlyArray<T>>([]);\n  const textFilterRef = useRef<TextFilterProps.Ref>(null);\n  const onSelectLatest = useStableCallback(onSelect);\n\n  function loadData() {\n    setLoading(true);\n    fetchData()\n      .then(items => {\n        setAllItems(items);\n        setLoading(false);\n      })\n      .catch(() => {\n        // error handling should happen on the customer side, outside of this component\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    loadData();\n    // Data loading is only happening on initial render, or via refresh button\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useForwardFocus(forwardFocusRef, textFilterRef);\n\n  const { items, filteredItemsCount, collectionProps, filterProps, paginationProps, actions } = useCollection(\n    allItems,\n    {\n      selection: { trackBy },\n      filtering: {\n        empty: i18nStrings.emptyText,\n        noMatch: (\n          <EmptyState\n            title={i18nStrings.noMatchTitle}\n            subtitle={i18nStrings.noMatchSubtitle}\n            action={\n              <InternalButton onClick={() => actions.setFiltering('')}>\n                {i18nStrings.clearFilterButtonText}\n              </InternalButton>\n            }\n          />\n        ),\n      },\n      pagination: {},\n      sorting: {},\n    }\n  );\n  const selectedItem = collectionProps.selectedItems?.[0];\n\n  // selectedItem can change internally inside the hook after pagination or filtering\n  // useEffect will capture all possible changes\n  useEffect(() => {\n    onSelectLatest(selectedItem);\n  }, [selectedItem, onSelectLatest]);\n\n  return (\n    <InternalTable<T>\n      variant={isVisualRefresh ? 'borderless' : 'container'}\n      {...collectionProps}\n      header={\n        <InternalHeader\n          variant={isVisualRefresh ? 'h3' : 'h2'}\n          headingTagOverride={'h3'}\n          actions={<InternalButton iconName=\"refresh\" ariaLabel={i18nStrings.labelRefresh} onClick={loadData} />}\n          counter={selectedItem ? `(1/${allItems.length})` : `(${allItems.length})`}\n        >\n          {i18nStrings.header}\n        </InternalHeader>\n      }\n      trackBy={trackBy}\n      filter={\n        <InternalTextFilter\n          {...filterProps}\n          ref={textFilterRef}\n          filteringAriaLabel={i18nStrings.filteringAriaLabel}\n          filteringClearAriaLabel={i18nStrings.filteringClearAriaLabel}\n          filteringPlaceholder={i18nStrings.filteringPlaceholder}\n          countText={i18nStrings.filteringCounterText ? i18nStrings.filteringCounterText(filteredItemsCount!) : ''}\n        />\n      }\n      pagination={<InternalPagination {...paginationProps} ariaLabels={i18nStrings.labelsPagination} />}\n      selectionType=\"single\"\n      ariaLabels={i18nStrings.selectionLabels}\n      loading={loading}\n      loadingText={i18nStrings.loadingText}\n      items={items}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled}\n      columnDefinitions={columnDefinitions}\n      enableKeyboardNavigation={true}\n    />\n  );\n}\n"]}