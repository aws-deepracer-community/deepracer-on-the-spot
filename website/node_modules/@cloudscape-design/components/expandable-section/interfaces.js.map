{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/expandable-section/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { BaseComponentProps } from '../internal/base-component';\nimport { NonCancelableEventHandler } from '../internal/events';\n\nexport namespace ExpandableSectionProps {\n  export type Variant = 'default' | 'footer' | 'container' | 'navigation' | 'stacked';\n  export interface ChangeDetail {\n    expanded: boolean;\n  }\n  export type HeadingTag = 'h1' | 'h2' | 'h3' | 'h4' | 'h5';\n}\n\nexport type InternalVariant = ExpandableSectionProps.Variant | 'compact';\n\nexport interface ExpandableSectionProps extends BaseComponentProps {\n  /**\n   * Determines whether the component initially displays in expanded state (that is, with content visible). The component operates in an uncontrolled\n   * manner even if you provide a value for this property.\n   */\n  defaultExpanded?: boolean;\n\n  /**\n   * Determines whether the component is in the expanded state (that is, with content visible). The component operates in a controlled\n   * manner if you provide a value for this property.\n   */\n  expanded?: boolean;\n\n  /**\n   * The possible variants of an expandable section are as follows:\n   *  * `default` - Use this variant in any context.\n   *  * `footer` - Use this variant in container footers.\n   *  * `container` - Use this variant in a detail page alongside other containers.\n   *  * `navigation` - Use this variant in the navigation panel with anchors and custom styled content.\n   *    It doesn't have any default styles.\n   * * `stacked` - Use this variant directly adjacent to other stacked containers (such as a container, table).\n   * @visualrefresh `stacked` variant\n   * */\n  variant?: ExpandableSectionProps.Variant;\n\n  /**\n   * Determines whether the content section's default padding is removed. This default padding is only present for the `container` variant.\n   */\n  disableContentPaddings?: boolean;\n\n  /**\n   * Primary content displayed in the expandable section element.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * @deprecated Use `headerText` instead.\n   */\n  header?: React.ReactNode;\n\n  /**\n   * The heading text. Use plain text. When using the container variant, you can use additional header props like `headerDescription` and `headerCounter` to display other elements in the header.\n   */\n  headerText?: React.ReactNode;\n\n  /**\n   * Supplementary text below the heading. Use with the container, default or footer variants.\n   */\n  headerDescription?: string;\n\n  /**\n   * Specifies secondary text that's displayed to the right of the heading title. Use with the container variant.\n   * Behaves similar to the Header component counter.\n   */\n  headerCounter?: string;\n\n  /**\n   * Overrides the default [HTML heading tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements).\n   * Use with the container variant (which defaults to H2) or default/footer variants (which default to DIV). Using this\n   * property does not change the visual appearance of the component. Note that this only works with the `headerText`\n   * slot (not with the deprecated `header`), and not with the navigation variant.\n   */\n  headingTagOverride?: ExpandableSectionProps.HeadingTag;\n\n  /**\n   * Adds `aria-label` to the header element.\n   * Use to assign unique labels when there are multiple expandable sections with the same header text on one page.\n   */\n  headerAriaLabel?: string;\n\n  /**\n   * Called when the state changes (that is, when the user expands or collapses the component).\n   * The event `detail` contains the current value of the `expanded` property.\n   */\n  onChange?: NonCancelableEventHandler<ExpandableSectionProps.ChangeDetail>;\n\n  /**\n   * The area next to the heading, used to display an Info link. Use with the container variant.\n   */\n  headerInfo?: React.ReactNode;\n\n  /**\n   * Actions for the header. Use with the container variant.\n   */\n  headerActions?: React.ReactNode;\n}\n"]}