{"version":3,"file":"body.js","sourceRoot":"","sources":["../../../src/popover/body.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport FocusLock from '../internal/components/focus-lock';\n\nimport styles from './styles.css.js';\nimport { useInternalI18n } from '../i18n/context';\n\nexport interface PopoverBodyProps {\n  dismissButton: boolean;\n  dismissAriaLabel: string | undefined;\n  onDismiss: (() => void) | undefined;\n\n  header: React.ReactNode | undefined;\n  children: React.ReactNode;\n  variant?: 'annotation';\n  overflowVisible?: 'content' | 'both';\n\n  className?: string;\n  ariaLabelledby?: string;\n}\n\nexport default function PopoverBody({\n  dismissButton: showDismissButton,\n  dismissAriaLabel,\n  header,\n  children,\n  onDismiss,\n  variant,\n  overflowVisible,\n  className,\n  ariaLabelledby,\n}: PopoverBodyProps) {\n  const i18n = useInternalI18n('popover');\n  const labelledById = useUniqueId('awsui-popover-');\n  const dismissButtonFocused = useRef(false);\n  const dismissButtonRef = useRef<ButtonProps.Ref>(null);\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.keyCode === KeyCode.escape) {\n        event.stopPropagation();\n        onDismiss?.();\n      }\n    },\n    [onDismiss]\n  );\n\n  // Implement our own auto-focus rather than using FocusLock's,\n  // because we also want to focus the dismiss button when it\n  // is added dynamically (e.g. in chart popovers)\n  useEffect(() => {\n    if (showDismissButton && !dismissButtonFocused.current) {\n      dismissButtonRef.current?.focus({ preventScroll: true });\n    }\n    dismissButtonFocused.current = showDismissButton;\n  }, [showDismissButton]);\n\n  const dismissButton = (showDismissButton ?? null) && (\n    <div className={styles.dismiss}>\n      <InternalButton\n        variant=\"icon\"\n        formAction=\"none\"\n        iconName=\"close\"\n        className={styles['dismiss-control']}\n        ariaLabel={i18n('dismissAriaLabel', dismissAriaLabel)}\n        onClick={() => onDismiss?.()}\n        ref={dismissButtonRef}\n      />\n    </div>\n  );\n\n  const isDialog = showDismissButton;\n  const shouldTrapFocus = showDismissButton && variant !== 'annotation';\n\n  const dialogProps = isDialog\n    ? {\n        role: 'dialog',\n        'aria-modal': shouldTrapFocus ? true : undefined,\n        'aria-labelledby': ariaLabelledby ?? (header ? labelledById : undefined),\n      }\n    : {};\n\n  return (\n    <div\n      className={clsx(styles.body, className, {\n        [styles['body-overflow-visible']]: overflowVisible === 'both',\n      })}\n      onKeyDown={onKeyDown}\n      {...dialogProps}\n    >\n      <FocusLock disabled={!shouldTrapFocus} autoFocus={false}>\n        {header && (\n          <div className={clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])}>\n            {dismissButton}\n            <div className={styles.header} id={labelledById}>\n              <h2>{header}</h2>\n            </div>\n          </div>\n        )}\n        <div className={!header && showDismissButton ? styles['has-dismiss'] : undefined}>\n          {!header && dismissButton}\n          <div className={clsx(styles.content, { [styles['content-overflow-visible']]: !!overflowVisible })}>\n            {children}\n          </div>\n        </div>\n      </FocusLock>\n    </div>\n  );\n}\n"]}