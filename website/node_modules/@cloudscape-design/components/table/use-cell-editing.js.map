{"version":3,"file":"use-cell-editing.js","sourceRoot":"","sources":["../../../src/table/use-cell-editing.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;;AAEtC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAA0B,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAYjF,MAAM,UAAU,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAoB;IACrE,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;IAC5E,MAAM,CAAC,sBAAsB,EAAE,yBAAyB,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;IAC1F,MAAM,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEpE,MAAM,SAAS,GAAG,CAAC,MAAc,EAAE,EAAE;QACnC,yBAAyB,CAAC,IAAI,CAAC,CAAC;QAChC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC,CAAC;IAEF,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAEnE,MAAM,YAAY,GAAG,CAAC,MAAc,EAAE,aAAsB,EAAE,EAAE;QAC9D,MAAM,cAAc,GAAG,mBAAmB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,EAAE;YACnB,kBAAkB,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,aAAa,EAAE;gBAClB,yBAAyB,CAAC,MAAM,CAAC,CAAC;aACnC;SACF;IACH,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAU,EAAE,EAAE,CACtD,QAAQ,MAAK,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,QAAQ,CAAA,IAAI,QAAQ,KAAK,eAAe,CAAC,QAAQ,CAAC;IAElF,MAAM,uBAAuB,GAAG,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAU,EAAE,EAAE,CACjE,QAAQ,MAAK,sBAAsB,aAAtB,sBAAsB,uBAAtB,sBAAsB,CAAE,QAAQ,CAAA,IAAI,QAAQ,KAAK,sBAAsB,CAAC,QAAQ,CAAC;IAEhG,MAAM,UAAU,GAAG,QAAQ;QACzB,CAAC,CAAC,CAAO,GAAG,IAAiC,EAAE,EAAE;YAC7C,qBAAqB,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI;gBACF,MAAM,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;aACzB;oBAAS;gBACR,qBAAqB,CAAC,KAAK,CAAC,CAAC;aAC9B;QACH,CAAC,CAAA;QACH,CAAC,CAAC,SAAS,CAAC;IAEd,OAAO;QACL,SAAS,EAAE,kBAAkB;QAC7B,SAAS;QACT,UAAU;QACV,YAAY;QACZ,uBAAuB;QACvB,YAAY;QACZ,UAAU;KACX,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useState } from 'react';\nimport { TableProps } from './interfaces';\nimport { CancelableEventHandler, fireCancelableEvent } from '../internal/events';\n\nexport interface CellId {\n  rowIndex: number;\n  colIndex: number;\n}\n\ninterface CellEditingProps {\n  onCancel?: CancelableEventHandler;\n  onSubmit?: TableProps.SubmitEditFunction<any>;\n}\n\nexport function useCellEditing({ onCancel, onSubmit }: CellEditingProps) {\n  const [currentEditCell, setCurrentEditCell] = useState<null | CellId>(null);\n  const [lastSuccessfulEditCell, setLastSuccessfulEditCell] = useState<null | CellId>(null);\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n\n  const startEdit = (cellId: CellId) => {\n    setLastSuccessfulEditCell(null);\n    setCurrentEditCell(cellId);\n  };\n\n  const cancelEdit = useCallback(() => setCurrentEditCell(null), []);\n\n  const completeEdit = (cellId: CellId, editCancelled: boolean) => {\n    const eventCancelled = fireCancelableEvent(onCancel, {});\n    if (!eventCancelled) {\n      setCurrentEditCell(null);\n      if (!editCancelled) {\n        setLastSuccessfulEditCell(cellId);\n      }\n    }\n  };\n\n  const checkEditing = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === currentEditCell?.rowIndex && colIndex === currentEditCell.colIndex;\n\n  const checkLastSuccessfulEdit = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === lastSuccessfulEditCell?.rowIndex && colIndex === lastSuccessfulEditCell.colIndex;\n\n  const submitEdit = onSubmit\n    ? async (...args: Parameters<typeof onSubmit>) => {\n        setCurrentEditLoading(true);\n        try {\n          await onSubmit(...args);\n        } finally {\n          setCurrentEditLoading(false);\n        }\n      }\n    : undefined;\n\n  return {\n    isLoading: currentEditLoading,\n    startEdit,\n    cancelEdit,\n    checkEditing,\n    checkLastSuccessfulEdit,\n    completeEdit,\n    submitEdit,\n  };\n}\n"]}