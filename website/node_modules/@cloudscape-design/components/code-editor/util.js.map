{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../src/code-editor/util.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAKvD,MAAM,wBAAwB,GAAwC,cAAc,CAAC;AACrF,MAAM,uBAAuB,GAAuC,mBAAmB,CAAC;AACxF,MAAM,oBAAoB,GAAwC,MAAM,CAAC;AACzE,MAAM,mBAAmB,GAAuC,uBAAuB,CAAC;AAExF,MAAM,CAAC,MAAM,wBAAwB,GAAG;IACtC,KAAK,EAAE,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,wBAAwB,CAAC;IAChG,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,uBAAuB,CAAC;CAC9F,CAAC;AAEF,SAAS,mBAAmB,CAAC,GAAQ,EAAE,UAAoC;;IACzE,+EAA+E;IAC/E,MAAM,eAAe,GAAG,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,0CAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,IAAY,EAAE,EAAE;QACpE,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,OAAO,CACL,CAAC,CAAC,eAAe;QACjB,OAAO,eAAe,CAAC,CAAC,CAAC,KAAK,QAAQ;QACtC,eAAe,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;QACnC,OAAO,eAAe,CAAC,CAAC,CAAC,KAAK,QAAQ;QACtC,eAAe,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;QACnC,OAAO,eAAe,CAAC,CAAC,CAAC,KAAK,QAAQ;QACtC,eAAe,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CACpC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,6BAA6B,CAAC,GAAQ;IACpD,OAAO,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,GAAQ;IACvC,uBACE,iBAAiB,EAAE,IAAI,IACpB,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EACpF;AACJ,CAAC;AAED,MAAM,UAAU,eAAe,CAC7B,IAAsB,EACtB,MAAwC;IAExC,IAAI,IAAI,KAAK,OAAO,EAAE;QACpB,OAAO,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,wBAAwB,CAAC;YACpE,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,oBAAoB,CAAC;KAC1B;SAAM;QACL,OAAO,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,uBAAuB,CAAC;YAClE,CAAC,CAAC,uBAAuB;YACzB,CAAC,CAAC,mBAAmB,CAAC;KACzB;AACH,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,KAA4B;IACtD,OAAO,aAAa,KAAK,EAAE,CAAC;AAC9B,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,QAAkC;;IACjE,OAAO,CAAA,MAAA,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAuB,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,0CAAE,KAAK,KAAI,QAAQ,CAAC;AACrG,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,EAAE,MAAM,EAAE,UAAU,EAA+C;IACnG,OAAO,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,WAAW,UAAU,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;AAC/D,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Ace } from 'ace-builds';\n\nimport { AceModes } from './ace-modes';\nimport { LightThemes, DarkThemes } from './ace-themes';\nimport { CodeEditorProps } from './interfaces';\n\nexport type PaneStatus = 'error' | 'warning' | 'hidden';\n\nconst CLOUD_EDITOR_LIGHT_THEME: typeof LightThemes[number]['value'] = 'cloud_editor';\nconst CLOUD_EDITOR_DARK_THEME: typeof DarkThemes[number]['value'] = 'cloud_editor_dark';\nconst FALLBACK_LIGHT_THEME: typeof LightThemes[number]['value'] = 'dawn';\nconst FALLBACK_DARK_THEME: typeof DarkThemes[number]['value'] = 'tomorrow_night_bright';\n\nexport const DEFAULT_AVAILABLE_THEMES = {\n  light: LightThemes.map(theme => theme.value).filter(value => value !== CLOUD_EDITOR_LIGHT_THEME),\n  dark: DarkThemes.map(theme => theme.value).filter(value => value !== CLOUD_EDITOR_DARK_THEME),\n};\n\nfunction isAceVersionAtLeast(ace: any, minVersion: [number, number, number]): boolean {\n  // Split semantic version numbers. We don't need a full semver parser for this.\n  const semanticVersion = ace?.version?.split('.').map((part: string) => {\n    const parsed = parseInt(part);\n    return Number.isNaN(parsed) ? part : parsed;\n  });\n\n  return (\n    !!semanticVersion &&\n    typeof semanticVersion[0] === 'number' &&\n    semanticVersion[0] >= minVersion[0] &&\n    typeof semanticVersion[1] === 'number' &&\n    semanticVersion[1] >= minVersion[1] &&\n    typeof semanticVersion[2] === 'number' &&\n    semanticVersion[2] >= minVersion[2]\n  );\n}\n\nexport function supportsKeyboardAccessibility(ace: any): boolean {\n  return isAceVersionAtLeast(ace, [1, 23, 0]);\n}\n\nexport function getDefaultConfig(ace: any): Partial<Ace.EditorOptions> {\n  return {\n    behavioursEnabled: true,\n    ...(supportsKeyboardAccessibility(ace) ? { enableKeyboardAccessibility: true } : {}),\n  };\n}\n\nexport function getDefaultTheme(\n  mode: 'light' | 'dark',\n  themes?: CodeEditorProps.AvailableThemes\n): CodeEditorProps.Theme {\n  if (mode === 'light') {\n    return themes?.light.some(value => value === CLOUD_EDITOR_LIGHT_THEME)\n      ? CLOUD_EDITOR_LIGHT_THEME\n      : FALLBACK_LIGHT_THEME;\n  } else {\n    return themes?.dark.some(value => value === CLOUD_EDITOR_DARK_THEME)\n      ? CLOUD_EDITOR_DARK_THEME\n      : FALLBACK_DARK_THEME;\n  }\n}\n\nexport function getAceTheme(theme: CodeEditorProps.Theme) {\n  return `ace/theme/${theme}`;\n}\n\nexport function getLanguageLabel(language: CodeEditorProps.Language): string {\n  return AceModes.filter((mode: { value: string }) => mode.value === language)[0]?.label || language;\n}\n\nexport function getStatusButtonId({ paneId, paneStatus }: { paneId?: string; paneStatus: PaneStatus }) {\n  return paneId ? `${paneId}-button-${paneStatus}` : undefined;\n}\n"]}