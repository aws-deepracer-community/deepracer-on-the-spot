{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/alert/actions-wrapper/index.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,cAAuC,MAAM,uBAAuB,CAAC;AAE5E,SAAS,kBAAkB,CACzB,eAAuD,EACvD,MAAuB,EACvB,UAA2B,EAC3B,aAA6C;IAE7C,IAAI,CAAC,MAAM,IAAI,UAAU,EAAE;QACzB,MAAM,GAAG,CACP,oBAAC,cAAc,IAAC,SAAS,EAAE,eAAe,CAAC,YAAY,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAC,MAAM,IAC/F,UAAU,CACI,CAClB,CAAC;KACH;IACD,OAAO,MAAM,CAAC,CAAC,CAAC,6BAAK,SAAS,EAAE,eAAe,CAAC,UAAU,IAAG,MAAM,CAAO,CAAC,CAAC,CAAC,IAAI,CAAC;AACpF,CAAC;AAWD,MAAM,UAAU,cAAc,CAAC,EAC7B,SAAS,EACT,eAAe,EACf,MAAM,EACN,iBAAiB,EACjB,UAAU,EACV,aAAa,GACO;IACpB,MAAM,YAAY,GAAG,kBAAkB,CAAC,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;IAC5F,IAAI,CAAC,YAAY,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;QACnD,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC;QACzC,YAAY;QACZ,iBAAiB,CACd,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport styles from './styles.css.js';\nimport InternalButton, { InternalButtonProps } from '../../button/internal';\n\nfunction createActionButton(\n  testUtilClasses: ActionsWrapperProps['testUtilClasses'],\n  action: React.ReactNode,\n  buttonText: React.ReactNode,\n  onButtonClick: InternalButtonProps['onClick']\n) {\n  if (!action && buttonText) {\n    action = (\n      <InternalButton className={testUtilClasses.actionButton} onClick={onButtonClick} formAction=\"none\">\n        {buttonText}\n      </InternalButton>\n    );\n  }\n  return action ? <div className={testUtilClasses.actionSlot}>{action}</div> : null;\n}\n\ninterface ActionsWrapperProps {\n  className: string;\n  testUtilClasses: { actionSlot: string; actionButton: string };\n  action: React.ReactNode;\n  discoveredActions: Array<React.ReactNode>;\n  buttonText: React.ReactNode;\n  onButtonClick: InternalButtonProps['onClick'];\n}\n\nexport function ActionsWrapper({\n  className,\n  testUtilClasses,\n  action,\n  discoveredActions,\n  buttonText,\n  onButtonClick,\n}: ActionsWrapperProps) {\n  const actionButton = createActionButton(testUtilClasses, action, buttonText, onButtonClick);\n  if (!actionButton && discoveredActions.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={clsx(styles.root, className)}>\n      {actionButton}\n      {discoveredActions}\n    </div>\n  );\n}\n"]}