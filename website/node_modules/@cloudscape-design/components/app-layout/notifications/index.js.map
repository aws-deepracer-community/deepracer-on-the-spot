{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/app-layout/notifications/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAErC,OAAO,IAAI,MAAM,MAAM,CAAC;AAaxB,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,CAAC,UAAU,CAC3C,CAAC,EAAsE,EAAE,GAA8B,EAAE,EAAE;;QAA1G,EAAE,MAAM,EAAE,sBAAsB,OAAsC,EAAjC,KAAK,cAA1C,oCAA4C,CAAF;IACzC,OAAO,MAAM,CAAC,CAAC,CAAC,CACd,6BAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,CAAC,sBAAsB,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,SAAS,EAAE;QACvF,6BACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,sBAAsB,IAAI,MAAM,CAAC,qBAAqB,CAAC,CAAC,gBACtF,MAAA,KAAK,CAAC,MAAM,0CAAE,aAAa,IAEtC,KAAK,CAAC,QAAQ,CACX,CACF,CACP,CAAC,CAAC,CAAC,CACF,6BACE,IAAI,EAAC,QAAQ,EACb,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAI,CACb,KAAK,CAAC,kBAAkB,EACxB,MAAM,CAAC,aAAa,EACpB,sBAAsB,IAAI,MAAM,CAAC,qBAAqB,CAAC,CACxD,gBACW,MAAA,KAAK,CAAC,MAAM,0CAAE,aAAa,IAEtC,KAAK,CAAC,QAAQ,CACX,CACP,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nimport { AppLayoutProps } from '../interfaces';\nimport clsx from 'clsx';\n\ninterface NotificationsProps {\n  testUtilsClassName: string;\n  children?: React.ReactNode;\n  labels: AppLayoutProps.Labels | undefined;\n  topOffset: number | undefined;\n  disableContentPaddings?: boolean;\n}\ninterface NotificationWrapperProps extends NotificationsProps {\n  sticky: boolean | undefined;\n}\n\nexport const Notifications = React.forwardRef(\n  ({ sticky, disableContentPaddings, ...props }: NotificationWrapperProps, ref: React.Ref<HTMLDivElement>) => {\n    return sticky ? (\n      <div ref={ref} className={styles['notifications-sticky']} style={{ top: props.topOffset }}>\n        <div\n          role=\"region\"\n          className={clsx(props.testUtilsClassName, disableContentPaddings && styles['no-content-paddings'])}\n          aria-label={props.labels?.notifications}\n        >\n          {props.children}\n        </div>\n      </div>\n    ) : (\n      <div\n        role=\"region\"\n        ref={ref}\n        className={clsx(\n          props.testUtilsClassName,\n          styles.notifications,\n          disableContentPaddings && styles['no-content-paddings']\n        )}\n        aria-label={props.labels?.notifications}\n      >\n        {props.children}\n      </div>\n    );\n  }\n);\n"]}