{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../src/app-layout/drawer/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { togglesConfig } from '../toggles';\nimport { AppLayoutProps } from '../interfaces';\n\nimport { FocusControlRefs } from '../utils/use-focus-control';\n\nexport interface DesktopDrawerProps {\n  id?: string;\n  contentClassName: string;\n  toggleClassName: string;\n  closeClassName: string;\n  toggleRefs: {\n    toggle: React.Ref<{ focus(): void }>;\n    close: React.Ref<{ focus(): void }>;\n  };\n  width: number;\n  topOffset: number | undefined;\n  bottomOffset: number | undefined;\n  ariaLabels: {\n    mainLabel: string | undefined;\n    closeLabel: string | undefined;\n    openLabel: string | undefined;\n    resizeHandle?: string;\n  };\n  children: React.ReactNode;\n  hideOpenButton?: boolean;\n  type: keyof typeof togglesConfig;\n  isMobile: boolean;\n  isOpen: boolean;\n  isHidden?: boolean;\n  onToggle: (isOpen: boolean) => void;\n  onClick?: (event: React.MouseEvent) => void;\n  onLoseFocus?: (event: React.FocusEvent) => void;\n  resizeHandle?: React.ReactNode;\n}\n\nexport interface ResizableDrawerProps extends DesktopDrawerProps {\n  activeDrawer: AppLayoutProps.Drawer | undefined;\n  onResize: (resizeDetail: { size: number; id: string }) => void;\n  minWidth: number;\n  maxWidth: number;\n  refs: FocusControlRefs;\n  toolsContent: React.ReactNode;\n}\n\nexport interface DrawerTriggersBarProps {\n  topOffset: number | undefined;\n  bottomOffset: number | undefined;\n  isMobile: boolean;\n  drawers: Array<AppLayoutProps.Drawer>;\n  activeDrawerId: string | null;\n  onDrawerChange: (newDrawerId: string | null) => void;\n  ariaLabels: AppLayoutProps['ariaLabels'];\n  drawerRefs: FocusControlRefs;\n}\n"]}