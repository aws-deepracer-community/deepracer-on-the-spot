{"version":3,"file":"use-highlighted-menu.js","sourceRoot":"","sources":["../../../../src/button-dropdown/utils/use-highlighted-menu.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState, useMemo, useCallback } from 'react';\n\nimport { indexIncludes, indexEquals } from './utils';\nimport { ButtonDropdownProps, HighlightProps } from '../interfaces';\nimport createItemsTree, { TreeIndex } from './create-items-tree';\nimport moveHighlightOneStep from './move-highlight';\n\ninterface UseHighlightedMenuOptions {\n  items: ButtonDropdownProps.Items;\n  hasExpandableGroups: boolean;\n  isInRestrictedView?: boolean;\n}\n\ninterface UseHighlightedMenuApi extends HighlightProps {\n  moveHighlight: (direction: -1 | 1) => void;\n  expandGroup: (group?: ButtonDropdownProps.ItemGroup) => void;\n  collapseGroup: () => void;\n  reset: () => void;\n  setIsUsingMouse: (isUsingMouse: boolean) => void;\n}\n\nexport default function useHighlightedMenu({\n  items,\n  hasExpandableGroups,\n  isInRestrictedView = false,\n}: UseHighlightedMenuOptions): UseHighlightedMenuApi {\n  const [targetIndex, setTargetIndex] = useState<TreeIndex>([]);\n  const [expandedIndex, setExpandedIndex] = useState<TreeIndex>([]);\n  const [isUsingMouse, setIsUsingMouse] = useState<boolean>(true);\n\n  const { getItem, getItemIndex, getSequentialIndex, getParentIndex } = useMemo(() => createItemsTree(items), [items]);\n\n  const targetItem = useMemo(() => getItem(targetIndex), [targetIndex, getItem]);\n\n  const isHighlighted = useCallback(\n    (item: ButtonDropdownProps.ItemOrGroup) => {\n      const index = getItemIndex(item);\n      return indexIncludes(index, targetIndex);\n    },\n    [targetIndex, getItemIndex]\n  );\n\n  // check if keyboard focus is on the element\n  const isKeyboardHighlight = useCallback(\n    (item: ButtonDropdownProps.ItemOrGroup) => {\n      const index = getItemIndex(item);\n      return !isUsingMouse && indexEquals(index, targetIndex);\n    },\n    [targetIndex, getItemIndex, isUsingMouse]\n  );\n\n  const isExpanded = useCallback(\n    (group: ButtonDropdownProps.ItemGroup) => {\n      const index = getItemIndex(group);\n\n      return indexIncludes(index, expandedIndex);\n    },\n    [expandedIndex, getItemIndex]\n  );\n\n  const moveHighlight = useCallback(\n    (direction: -1 | 1) => {\n      const getNext = (index: TreeIndex) => {\n        const nextIndex = getSequentialIndex(index, direction);\n        const item = getItem(nextIndex || [-1]);\n\n        if (!nextIndex || !item) {\n          return null;\n        }\n\n        const parentIndex = getParentIndex(item);\n        const parentItem = parentIndex && getItem(parentIndex);\n\n        return { index: nextIndex, item, parent: parentItem || undefined };\n      };\n\n      const nextIndex = moveHighlightOneStep({\n        startIndex: targetIndex,\n        expandedIndex,\n        getNext,\n        hasExpandableGroups,\n        isInRestrictedView,\n      });\n\n      if (nextIndex) {\n        setTargetIndex(nextIndex);\n      }\n    },\n    [targetIndex, expandedIndex, getItem, getSequentialIndex, getParentIndex, hasExpandableGroups, isInRestrictedView]\n  );\n\n  const highlightItem = useCallback(\n    (item: ButtonDropdownProps.ItemOrGroup) => {\n      setTargetIndex(getItemIndex(item));\n    },\n    [getItemIndex]\n  );\n\n  const expandGroup = useCallback(\n    (group?: ButtonDropdownProps.ItemGroup) => {\n      const groupIndex = group ? getItemIndex(group) : targetIndex;\n      const firstChildIndex = [...groupIndex, 0];\n\n      // move to the first child item unless in restricted mode\n      setTargetIndex(isInRestrictedView ? groupIndex : firstChildIndex);\n      setExpandedIndex(groupIndex);\n    },\n    [targetIndex, getItemIndex, isInRestrictedView]\n  );\n\n  const collapseGroup = useCallback(() => {\n    if (expandedIndex.length > 0) {\n      setTargetIndex(expandedIndex);\n      setExpandedIndex(expandedIndex.slice(0, -1));\n    }\n  }, [expandedIndex]);\n\n  const reset = useCallback(() => {\n    setTargetIndex([]);\n    setExpandedIndex([]);\n  }, []);\n\n  return {\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    moveHighlight,\n    highlightItem,\n    expandGroup,\n    collapseGroup,\n    reset,\n    setIsUsingMouse,\n  };\n}\n"]}