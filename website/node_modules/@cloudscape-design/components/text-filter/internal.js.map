{"version":3,"file":"internal.js","sourceRoot":"","sources":["../../../src/text-filter/internal.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AACtC,OAAO,aAAa,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,OAAO,eAAe,MAAM,iCAAiC,CAAC;AAC9D,OAAO,EAAE,sBAAsB,EAAE,MAAM,oBAAoB,CAAC;AAE5D,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAC9D,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAExD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAEjD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAIrC,MAAM,kBAAkB,GAAG,KAAK,CAAC,UAAU,CACzC,CACE,EAc0B,EAC1B,GAAmC,EACnC,EAAE;QAhBF,EACE,aAAa,EACb,kBAAkB,EAClB,oBAAoB,EACpB,uBAAuB,EACvB,SAAS,EACT,cAAc,EACd,eAAe,EACf,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,eAAe,EACf,iBAAiB,OAEO,EADrB,IAAI,cAbT,yNAcC,CADQ;IAIT,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IACrC,MAAM,QAAQ,GAAG,MAAM,CAAmB,IAAI,CAAC,CAAC;IAChD,eAAe,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAE/B,MAAM,eAAe,GAAG,WAAW,CAAC,4BAA4B,CAAC,CAAC;IAClE,MAAM,WAAW,GAAG,aAAa,IAAI,SAAS,IAAI,CAAC,QAAQ,CAAC;IAE5D,OAAO,CACL,6CAAS,SAAS,IAAE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,iBAAiB;QAC3F,oBAAC,aAAa,IACZ,uBAAuB,EAAE,IAAI,EAC7B,GAAG,EAAE,QAAQ,EACb,SAAS,EAAE,MAAM,CAAC,KAAK,EACvB,IAAI,EAAC,QAAQ,EACb,SAAS,EAAE,kBAAkB,EAC7B,WAAW,EAAE,oBAAoB,EACjC,KAAK,EAAE,aAAa,EACpB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,SAAS,EACpB,cAAc,EAAE,cAAc,EAC9B,eAAe,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,EAAE,eAAe,CAAC,EACxF,YAAY,EAAE,KAAK,EACnB,cAAc,EAAE,uBAAuB,EACvC,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,sBAAsB,CAAC,QAAQ,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAC1F,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,sBAAsB,CAAC,eAAe,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GACzG;QACD,WAAW,CAAC,CAAC,CAAC,oBAAC,aAAa,IAAC,EAAE,EAAE,eAAe,IAAG,SAAS,CAAiB,CAAC,CAAC,CAAC,IAAI,CACjF,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport InternalInput from '../input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { joinStrings } from '../internal/utils/strings';\nimport { TextFilterProps } from './interfaces';\nimport { SearchResults } from './search-results';\n\nimport styles from './styles.css.js';\n\ntype InternalTextFilterProps = TextFilterProps & InternalBaseComponentProps;\n\nconst InternalTextFilter = React.forwardRef(\n  (\n    {\n      filteringText,\n      filteringAriaLabel,\n      filteringPlaceholder,\n      filteringClearAriaLabel,\n      controlId,\n      ariaLabelledby,\n      ariaDescribedby,\n      disabled,\n      countText,\n      onChange,\n      onDelayedChange,\n      __internalRootRef,\n      ...rest\n    }: InternalTextFilterProps,\n    ref: React.Ref<TextFilterProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(rest);\n    const inputRef = useRef<HTMLInputElement>(null);\n    useForwardFocus(ref, inputRef);\n\n    const searchResultsId = useUniqueId('text-filter-search-results');\n    const showResults = filteringText && countText && !disabled;\n\n    return (\n      <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={__internalRootRef}>\n        <InternalInput\n          __inheritFormFieldProps={true}\n          ref={inputRef}\n          className={styles.input}\n          type=\"search\"\n          ariaLabel={filteringAriaLabel}\n          placeholder={filteringPlaceholder}\n          value={filteringText}\n          disabled={disabled}\n          controlId={controlId}\n          ariaLabelledby={ariaLabelledby}\n          ariaDescribedby={joinStrings(showResults ? searchResultsId : undefined, ariaDescribedby)}\n          autoComplete={false}\n          clearAriaLabel={filteringClearAriaLabel}\n          onChange={event => fireNonCancelableEvent(onChange, { filteringText: event.detail.value })}\n          __onDelayedInput={event => fireNonCancelableEvent(onDelayedChange, { filteringText: event.detail.value })}\n        />\n        {showResults ? <SearchResults id={searchResultsId}>{countText}</SearchResults> : null}\n      </div>\n    );\n  }\n);\n\nexport default InternalTextFilter;\n"]}